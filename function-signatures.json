{
  "extractedAt": "2025-08-02T15:04:59.736Z",
  "totalFunctions": 194,
  "functions": [
    {
      "name": "syncAuthorTag",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/helper/migrate.ts",
      "line": 4,
      "column": 1,
      "parameters": [
        {
          "name": "db",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "execute"
        ],
        "usedVariables": [
          "sql"
        ]
      }
    },
    {
      "name": "down",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/helper/migrate.ts",
      "line": 74,
      "column": 1,
      "parameters": [
        {
          "name": "db",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "execute"
        ],
        "usedVariables": [
          "sql"
        ]
      }
    },
    {
      "name": "adminAuthMiddleware",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/index.ts",
      "line": 40,
      "column": 29,
      "parameters": [
        {
          "name": "c",
          "type": "Context<HonoEnv, any, {}>",
          "optional": false
        },
        {
          "name": "next",
          "type": "() => Promise<void>",
          "optional": false
        }
      ],
      "returnType": "Promise<(Response & import(\"/home/stangen/code/Douren-Monorepo/node_modules/hono/dist/types/types\").TypedResponse<{ message: string; }, 401, \"json\">) | undefined>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "verifyAdminUser",
          "json",
          "next"
        ],
        "usedVariables": [
          "verified",
          "c",
          "message"
        ]
      }
    },
    {
      "name": "imageAuthMiddleware",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/index.ts",
      "line": 54,
      "column": 29,
      "parameters": [
        {
          "name": "c",
          "type": "Context<HonoEnv, any, {}>",
          "optional": false
        },
        {
          "name": "next",
          "type": "() => Promise<void>",
          "optional": false
        }
      ],
      "returnType": "Promise<(Response & import(\"/home/stangen/code/Douren-Monorepo/node_modules/hono/dist/types/types\").TypedResponse<{ message: string; }, 401, \"json\">) | undefined>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "verifyImageUser",
          "json",
          "next"
        ],
        "usedVariables": [
          "verified",
          "c",
          "message"
        ]
      }
    },
    {
      "name": "createContext",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/index.ts",
      "line": 86,
      "column": 18,
      "parameters": [
        {
          "name": "_opts",
          "type": "{ req: Request; resHeaders: Headers; info: import(\"/home/stangen/code/Douren-Monorepo/node_modules/@trpc/server/dist/unstable-core-do-not-import\").TRPCRequestInfo; }",
          "optional": false
        },
        {
          "name": "c",
          "type": "Context<any, any, {}>",
          "optional": false
        }
      ],
      "returnType": "{ db: any; honoContext: Context<any, any, {}>; }",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "log",
          "initDB"
        ],
        "usedVariables": [
          "db",
          "honoContext",
          "c"
        ]
      }
    },
    {
      "name": "scheduled",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/index.ts",
      "line": 104,
      "column": 2,
      "parameters": [
        {
          "name": "_event",
          "type": "ScheduledEvent",
          "optional": false
        },
        {
          "name": "env",
          "type": "ENV_BINDING",
          "optional": false
        },
        {
          "name": "ctx",
          "type": "ExecutionContext",
          "optional": false
        }
      ],
      "returnType": "void",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "leadingComments": [
          "/** this part manages cronjobs */"
        ],
        "calledFunctions": [
          "initDB",
          "syncAuthorTag",
          "log",
          "waitUntil",
          "delayedProcessing"
        ],
        "usedVariables": [
          "delayedProcessing",
          "db"
        ]
      }
    },
    {
      "name": "delayedProcessing",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/index.ts",
      "line": 105,
      "column": 29,
      "parameters": [],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "scheduled",
        "calledFunctions": [
          "initDB",
          "syncAuthorTag",
          "log"
        ],
        "usedVariables": [
          "db"
        ]
      }
    },
    {
      "name": "fetch",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/index.ts",
      "line": 112,
      "column": 2,
      "parameters": [
        {
          "name": "request",
          "type": "Request",
          "optional": false
        },
        {
          "name": "env",
          "type": "{ Bindings?: import(\"/home/stangen/code/Douren-Monorepo/node_modules/hono/dist/types/types\").Bindings; Variables?: import(\"/home/stangen/code/Douren-Monorepo/node_modules/hono/dist/types/types\").Variables; }",
          "optional": false
        },
        {
          "name": "ctx",
          "type": "ExecutionContext",
          "optional": false
        }
      ],
      "returnType": "Response | Promise<Response>",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "calledFunctions": [
          "fetch"
        ],
        "usedVariables": [
          "request",
          "env",
          "ctx"
        ]
      }
    },
    {
      "name": "ArtistPageProvider",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/routes/artist/$artistId/-context/ArtistPageContext/ArtistPageContext.tsx",
      "line": 11,
      "column": 35,
      "parameters": [
        {
          "name": "__0",
          "type": "{ children: ReactNode; data: ArtistPageTypes; }",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "value",
          "data",
          "children"
        ]
      }
    },
    {
      "name": "Navbar",
      "filePath": "fe/Douren-frontend/src/routes/-components/Navbar.tsx",
      "line": 3,
      "column": 23,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "NavMenu",
          "activePath",
          "path"
        ]
      }
    },
    {
      "name": "root",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/routes/__root.tsx",
      "line": 8,
      "column": 14,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "bind",
          "sx"
        ],
        "usedVariables": [
          "sx",
          "style",
          "AnimatePresence",
          "div",
          "className",
          "Navbar",
          "Outlet"
        ]
      }
    },
    {
      "name": "component",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/routes/index.tsx",
      "line": 5,
      "column": 14,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "Navigate"
        ]
      }
    },
    {
      "name": "Navigate",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/routes/index.tsx",
      "line": 8,
      "column": 18,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useNavigate",
          "useEffect",
          "navigate"
        ],
        "usedVariables": [
          "navigate",
          "to",
          "params",
          "eventName",
          "div"
        ]
      }
    },
    {
      "name": "ScrollToTop",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/components/ScrollToTop/ScrollToTop.tsx",
      "line": 7,
      "column": 21,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "bind",
          "sx"
        ],
        "usedVariables": [
          "sx",
          "style",
          "whileHover",
          "backgroundColor",
          "href",
          "className",
          "value",
          "color",
          "size",
          "BiArrowToTop"
        ]
      }
    },
    {
      "name": "Animate",
      "filePath": "fe/Douren-frontend/src/components/Animate/Animate.tsx",
      "line": 3,
      "column": 24,
      "parameters": [
        {
          "name": "OgComponent",
          "type": "React.FunctionComponent<{}>",
          "optional": false
        }
      ],
      "returnType": "{ (): import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element; displayName: string; }",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "AnimatedComponent",
          "OgComponent",
          "className",
          "initial",
          "scaleY",
          "animate",
          "exit",
          "transition",
          "duration",
          "ease"
        ]
      }
    },
    {
      "name": "AnimatedComponent",
      "filePath": "fe/Douren-frontend/src/components/Animate/Animate.tsx",
      "line": 4,
      "column": 29,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "Animate",
        "calledFunctions": [],
        "usedVariables": [
          "OgComponent",
          "className",
          "initial",
          "scaleY",
          "animate",
          "exit",
          "transition",
          "duration",
          "ease"
        ]
      }
    },
    {
      "name": "useArtistLoader",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/hooks/useArtistLoader.ts",
      "line": 3,
      "column": 25,
      "parameters": [
        {
          "name": "id",
          "type": "number | undefined",
          "optional": true
        }
      ],
      "returnType": "any",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useQuery",
          "toString"
        ],
        "usedVariables": [
          "id",
          "enabled"
        ]
      }
    },
    {
      "name": "useFetchTagData",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/hooks/useFetchTagData.ts",
      "line": 3,
      "column": 1,
      "parameters": [],
      "returnType": "any",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "useQuery"
        ],
        "usedVariables": [
          "tag"
        ]
      }
    },
    {
      "name": "Collection",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/routes/collection/index.tsx",
      "line": 9,
      "column": 27,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "bind",
          "sx"
        ],
        "usedVariables": [
          "sx",
          "style",
          "keyCollection",
          "initial",
          "opacity",
          "animate",
          "exit",
          "transition",
          "duration",
          "className"
        ]
      }
    },
    {
      "name": "visible",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/helper/listAnimation.ts",
      "line": 4,
      "column": 12,
      "parameters": [
        {
          "name": "index",
          "type": "number",
          "optional": false
        }
      ],
      "returnType": "{ opacity: number; transition: { delay: number; }; }",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "opacity",
          "transition",
          "delay",
          "index"
        ]
      }
    },
    {
      "name": "processArtistData",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/helper/processArtistData.ts",
      "line": 4,
      "column": 1,
      "parameters": [
        {
          "name": "ArtistData",
          "type": "ArtistTypes",
          "optional": false
        }
      ],
      "returnType": "Array<LinkResult>",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "processLink",
          "concat"
        ],
        "usedVariables": [
          "link",
          "LinkResult"
        ]
      }
    },
    {
      "name": "useProcessTagData",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/helper/useProcessTagData.ts",
      "line": 3,
      "column": 1,
      "parameters": [
        {
          "name": "allTag",
          "type": "Array<string>",
          "optional": false
        }
      ],
      "returnType": "Array<TagObject>",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "useTagFilterContext",
          "filter",
          "map",
          "trim",
          "forEach",
          "getTag",
          "flatMap"
        ],
        "usedVariables": [
          "getTag",
          "state",
          "item",
          "allTag",
          "renderTag",
          "TagObject",
          "index",
          "value"
        ]
      }
    },
    {
      "name": "ArtistButton",
      "filePath": "fe/Douren-frontend/src/routes/artist/-components/ArtistButton.tsx",
      "line": 14,
      "column": 22,
      "parameters": [
        {
          "name": "__0",
          "type": "Props",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "bind",
          "useEventDataContext",
          "useMediaQuery",
          "sx"
        ],
        "usedVariables": [
          "sx",
          "styles",
          "eventData",
          "size",
          "fontSize",
          "matches",
          "value",
          "color",
          "Link",
          "to"
        ]
      }
    },
    {
      "name": "ArtistContainer",
      "filePath": "fe/Douren-frontend/src/routes/artist/-components/ArtistContainer.tsx",
      "line": 15,
      "column": 32,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element | null",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useSearchContext",
          "useState",
          "bind",
          "useTagFilterContext",
          "join",
          "map",
          "useSortSelectContext",
          "useQuery",
          "String",
          "usePagination"
        ],
        "usedVariables": [
          "search",
          "page",
          "setPage",
          "sx",
          "style",
          "tagFilter",
          "state",
          "allTag",
          "val",
          "sortSelect"
        ]
      }
    },
    {
      "name": "Artist",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/routes/artist/index.tsx",
      "line": 12,
      "column": 16,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "bind",
          "useFetchTagData",
          "sx"
        ],
        "usedVariables": [
          "sx",
          "style",
          "tag",
          "DataOperationProvider",
          "div",
          "className",
          "SearchBox",
          "FilterContainer",
          "sortItem",
          "ArtistContainer"
        ]
      }
    },
    {
      "name": "EventContainer",
      "filePath": "fe/Douren-frontend/src/routes/event/-components/EventContainer.tsx",
      "line": 18,
      "column": 24,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element | null",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "bind",
          "useSortSelectContext",
          "useSearchColumnContext",
          "useSearchContext",
          "useTagFilterContext",
          "useMemo",
          "join",
          "map",
          "usePaginationContext",
          "useLocation"
        ],
        "usedVariables": [
          "sx",
          "styles",
          "sortSelect",
          "searchColumn",
          "search",
          "tagFilter",
          "state",
          "allTag",
          "val",
          "page"
        ]
      }
    },
    {
      "name": "EventName",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/routes/event/$eventName.tsx",
      "line": 24,
      "column": 1,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "useFetchTagData",
          "bind",
          "usePrefetchQuery",
          "useParams",
          "sx"
        ],
        "usedVariables": [
          "tag",
          "sx",
          "styles",
          "eventName",
          "page",
          "sort",
          "search",
          "searchTable",
          "initial",
          "opacity"
        ]
      }
    },
    {
      "name": "useArtistPageContext",
      "filePath": "fe/Douren-frontend/src/routes/artist/$artistId/-context/ArtistPageContext/useArtistPageContext.ts",
      "line": 4,
      "column": 37,
      "parameters": [],
      "returnType": "import(\"fe/Douren-frontend/src/types/index\").ArtistPageTypes",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useContext"
        ],
        "usedVariables": [
          "data",
          "ArtistPageContext",
          "Error"
        ]
      }
    },
    {
      "name": "ArtistPage",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/routes/artist/$artistId/index.tsx",
      "line": 15,
      "column": 20,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element | null",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useParams",
          "parseInt",
          "useArtistLoader",
          "useFetchTagData",
          "bind",
          "sx"
        ],
        "usedVariables": [
          "id",
          "uuid",
          "data",
          "artistData",
          "tag",
          "sx",
          "style",
          "DataOperationProvider",
          "className",
          "ArtistPageProvider"
        ]
      }
    },
    {
      "name": "ArtistPageProvider",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/routes/artist/$artistId/-context/ArtistPageContext/ArtistPageContext.tsx",
      "line": 11,
      "column": 35,
      "parameters": [
        {
          "name": "__0",
          "type": "{ children: ReactNode; data: ArtistPageTypes; }",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "value",
          "data",
          "children"
        ]
      }
    },
    {
      "name": "Navbar",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/routes/-components/Navbar.tsx",
      "line": 3,
      "column": 23,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "NavMenu",
          "path"
        ]
      }
    },
    {
      "name": "Root",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/routes/__root.tsx",
      "line": 4,
      "column": 14,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "div",
          "className",
          "Navbar",
          "Outlet"
        ]
      }
    },
    {
      "name": "syncAuthorTag",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/helper/migrate.ts",
      "line": 4,
      "column": 1,
      "parameters": [
        {
          "name": "db",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "execute"
        ],
        "usedVariables": [
          "sql"
        ]
      }
    },
    {
      "name": "down",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/helper/migrate.ts",
      "line": 74,
      "column": 1,
      "parameters": [
        {
          "name": "db",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "execute"
        ],
        "usedVariables": [
          "sql"
        ]
      }
    },
    {
      "name": "adminAuthMiddleware",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/index.ts",
      "line": 40,
      "column": 29,
      "parameters": [
        {
          "name": "c",
          "type": "Context<HonoEnv, any, {}>",
          "optional": false
        },
        {
          "name": "next",
          "type": "() => Promise<void>",
          "optional": false
        }
      ],
      "returnType": "Promise<(Response & import(\"/home/stangen/code/Douren-Monorepo/node_modules/hono/dist/types/types\").TypedResponse<{ message: string; }, 401, \"json\">) | undefined>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "verifyAdminUser",
          "json",
          "next"
        ],
        "usedVariables": [
          "verified",
          "c",
          "message"
        ]
      }
    },
    {
      "name": "imageAuthMiddleware",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/index.ts",
      "line": 54,
      "column": 29,
      "parameters": [
        {
          "name": "c",
          "type": "Context<HonoEnv, any, {}>",
          "optional": false
        },
        {
          "name": "next",
          "type": "() => Promise<void>",
          "optional": false
        }
      ],
      "returnType": "Promise<(Response & import(\"/home/stangen/code/Douren-Monorepo/node_modules/hono/dist/types/types\").TypedResponse<{ message: string; }, 401, \"json\">) | undefined>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "verifyImageUser",
          "json",
          "next"
        ],
        "usedVariables": [
          "verified",
          "c",
          "message"
        ]
      }
    },
    {
      "name": "createContext",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/index.ts",
      "line": 86,
      "column": 18,
      "parameters": [
        {
          "name": "_opts",
          "type": "{ req: Request; resHeaders: Headers; info: import(\"/home/stangen/code/Douren-Monorepo/node_modules/@trpc/server/dist/unstable-core-do-not-import\").TRPCRequestInfo; }",
          "optional": false
        },
        {
          "name": "c",
          "type": "Context<any, any, {}>",
          "optional": false
        }
      ],
      "returnType": "{ db: any; honoContext: Context<any, any, {}>; }",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "log",
          "initDB"
        ],
        "usedVariables": [
          "db",
          "honoContext",
          "c"
        ]
      }
    },
    {
      "name": "scheduled",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/index.ts",
      "line": 104,
      "column": 2,
      "parameters": [
        {
          "name": "_event",
          "type": "ScheduledEvent",
          "optional": false
        },
        {
          "name": "env",
          "type": "ENV_BINDING",
          "optional": false
        },
        {
          "name": "ctx",
          "type": "ExecutionContext",
          "optional": false
        }
      ],
      "returnType": "void",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "leadingComments": [
          "/** this part manages cronjobs */"
        ],
        "calledFunctions": [
          "initDB",
          "syncAuthorTag",
          "log",
          "waitUntil",
          "delayedProcessing"
        ],
        "usedVariables": [
          "delayedProcessing",
          "db"
        ]
      }
    },
    {
      "name": "delayedProcessing",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/index.ts",
      "line": 105,
      "column": 29,
      "parameters": [],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "scheduled",
        "calledFunctions": [
          "initDB",
          "syncAuthorTag",
          "log"
        ],
        "usedVariables": [
          "db"
        ]
      }
    },
    {
      "name": "fetch",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/index.ts",
      "line": 112,
      "column": 2,
      "parameters": [
        {
          "name": "request",
          "type": "Request",
          "optional": false
        },
        {
          "name": "env",
          "type": "{ Bindings?: import(\"/home/stangen/code/Douren-Monorepo/node_modules/hono/dist/types/types\").Bindings; Variables?: import(\"/home/stangen/code/Douren-Monorepo/node_modules/hono/dist/types/types\").Variables; }",
          "optional": false
        },
        {
          "name": "ctx",
          "type": "ExecutionContext",
          "optional": false
        }
      ],
      "returnType": "Response | Promise<Response>",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "calledFunctions": [
          "fetch"
        ],
        "usedVariables": [
          "request",
          "env",
          "ctx"
        ]
      }
    },
    {
      "name": "ArtistEditButton",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/ArtistEditButton.tsx",
      "line": 5,
      "column": 33,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useEventDataContext"
        ],
        "usedVariables": [
          "eventData",
          "Link",
          "to",
          "className",
          "Pen"
        ]
      }
    },
    {
      "name": "DeleteButton",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/DeleteButton/DeleteButton.tsx",
      "line": 4,
      "column": 29,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useState",
          "setConfirmation"
        ],
        "usedVariables": [
          "confirmation",
          "setConfirmation",
          "deleteArtist",
          "Button",
          "onClick"
        ]
      }
    },
    {
      "name": "deleteArtist",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/DeleteButton/DeleteButton.tsx",
      "line": 7,
      "column": 24,
      "parameters": [],
      "returnType": "void",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "DeleteButton",
        "calledFunctions": [
          "setConfirmation"
        ],
        "usedVariables": [
          "confirmation"
        ]
      }
    },
    {
      "name": "CompleteStep",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/CompleteStep.tsx",
      "line": 3,
      "column": 1,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "useRefreshHelperContext"
        ],
        "usedVariables": [
          "handleReset",
          "div",
          "className",
          "Button",
          "onClick"
        ]
      }
    },
    {
      "name": "useFetchTagData",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/hooks/useFetchTagData.ts",
      "line": 3,
      "column": 1,
      "parameters": [],
      "returnType": "any",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "useQuery"
        ],
        "usedVariables": [
          "tag"
        ]
      }
    },
    {
      "name": "useNewArtistSubmission",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/hooks/useNewArtistSubmission.ts",
      "line": 11,
      "column": 39,
      "parameters": [],
      "returnType": "() => Promise<void>",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "log",
          "useMutation",
          "useFormDataContext",
          "getEntityFormData",
          "toString",
          "mutateAsync",
          "mutate"
        ],
        "usedVariables": [
          "createArtist",
          "createEventArtist",
          "getFormData",
          "state",
          "artistStep",
          "eventArtistStep",
          "TagHelper",
          "ArrayTagHelper",
          "artistDataWithTags",
          "tags"
        ]
      }
    },
    {
      "name": "getEntityFormData",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/hooks/useNewArtistSubmission.ts",
      "line": 38,
      "column": 27,
      "parameters": [
        {
          "name": "getFormData",
          "type": "<T>(key: string) => T",
          "optional": false
        }
      ],
      "returnType": "EntityFormData",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "getFormData"
        ],
        "usedVariables": [
          "artistStep",
          "ArtistFormSchema",
          "eventArtistStep",
          "EventArtistSchema",
          "productStep"
        ]
      }
    },
    {
      "name": "createFormDataStore",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/FormDataContext/FormDataContext.tsx",
      "line": 13,
      "column": 58,
      "parameters": [
        {
          "name": "set",
          "type": "{ (partial: FormDataState | Partial<FormDataState> | ((state: FormDataState) => FormDataState | Partial<FormDataState>), replace?: false): void; (state: FormDataState | ((state: FormDataState) => FormDataState), replace: true): void; }",
          "optional": false
        },
        {
          "name": "get",
          "type": "() => FormDataState",
          "optional": false
        }
      ],
      "returnType": "{ formData: {}; setData: <T>(key: string, data: T) => void; getData: <T>(key: string) => T; }",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "set",
          "get"
        ],
        "usedVariables": [
          "formData",
          "setData",
          "T",
          "key",
          "data",
          "state",
          "getData",
          "Error"
        ]
      }
    },
    {
      "name": "setData",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/FormDataContext/FormDataContext.tsx",
      "line": 15,
      "column": 12,
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "optional": false
        },
        {
          "name": "data",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "void",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "createFormDataStore",
        "calledFunctions": [
          "set"
        ],
        "usedVariables": [
          "state",
          "formData",
          "key",
          "data"
        ]
      }
    },
    {
      "name": "getData",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/FormDataContext/FormDataContext.tsx",
      "line": 23,
      "column": 12,
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "T",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "createFormDataStore",
        "calledFunctions": [
          "get"
        ],
        "usedVariables": [
          "key",
          "Error",
          "T"
        ]
      }
    },
    {
      "name": "FormDataProvider",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/FormDataContext/FormDataContext.tsx",
      "line": 35,
      "column": 33,
      "parameters": [
        {
          "name": "__0",
          "type": "{ children: ReactNode; }",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useState",
          "createStore"
        ],
        "usedVariables": [
          "store",
          "FormDataState",
          "createFormDataStore",
          "value",
          "children"
        ]
      }
    },
    {
      "name": "ImageUploadContextProvider",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/ImageUpload/context/ImageUploadContext.tsx",
      "line": 16,
      "column": 43,
      "parameters": [
        {
          "name": "__0",
          "type": "props",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "value",
          "hook",
          "children"
        ]
      }
    },
    {
      "name": "useImageUploadContext",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/ImageUpload/context/useImageUploadContext.tsx",
      "line": 4,
      "column": 38,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/fe/cms/src/components/ImageUpload/context/ImageUploadContext\").ImageUploadHook",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useContext"
        ],
        "usedVariables": [
          "data",
          "ImageUploadContext",
          "Error"
        ]
      }
    },
    {
      "name": "ResultBox",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/ImageUpload/subcomponent/ResultBox.tsx",
      "line": 5,
      "column": 26,
      "parameters": [],
      "returnType": "Array<import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element>",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useImageUploadContext",
          "map",
          "onImageRemove"
        ],
        "usedVariables": [
          "imageHook",
          "onImageRemove",
          "imageList",
          "item",
          "index",
          "key",
          "img",
          "className",
          "alt",
          "src"
        ]
      }
    },
    {
      "name": "UploadBox",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/ImageUpload/subcomponent/UploadBox.tsx",
      "line": 7,
      "column": 26,
      "parameters": [
        {
          "name": "__0",
          "type": "props",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element | null",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useImageUploadContext"
        ],
        "usedVariables": [
          "imageHook",
          "multiple",
          "imageList",
          "onImageUpload",
          "dragProps",
          "isDragging",
          "extendedClass",
          "button",
          "className",
          "onClick"
        ]
      }
    },
    {
      "name": "ImageUpload",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/ImageUpload/ImageUpload.tsx",
      "line": 16,
      "column": 5,
      "parameters": [
        {
          "name": "__0",
          "type": "props",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useState",
          "setImages",
          "forEach",
          "push",
          "setValue"
        ],
        "usedVariables": [
          "images",
          "setImages",
          "ImageListType",
          "useOnChange",
          "imageList",
          "allFile",
          "File",
          "i",
          "ImageUploading",
          "multiple"
        ]
      }
    },
    {
      "name": "useOnChange",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/ImageUpload/ImageUpload.tsx",
      "line": 18,
      "column": 23,
      "parameters": [
        {
          "name": "imageList",
          "type": "Array<import(\"/home/stangen/code/Douren-Monorepo/node_modules/react-images-uploading/dist/typings\").ImageType>",
          "optional": false
        }
      ],
      "returnType": "void",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "ImageUpload",
        "calledFunctions": [
          "setImages",
          "forEach",
          "push",
          "setValue"
        ],
        "usedVariables": [
          "imageList",
          "allFile",
          "File",
          "i"
        ]
      }
    },
    {
      "name": "uploadImage",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/Forms/subcomponent/FormImageUpload.tsx",
      "line": 19,
      "column": 22,
      "parameters": [],
      "returnType": "Promise<string>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "push",
          "uploadImage",
          "join"
        ],
        "usedVariables": [
          "allLink",
          "img",
          "image"
        ]
      }
    },
    {
      "name": "useFormFieldContext",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/Forms/context/FormFieldContext.ts",
      "line": 9,
      "column": 36,
      "parameters": [],
      "returnType": "FormContextType",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useContext"
        ],
        "usedVariables": [
          "name",
          "FormFieldContext",
          "Error"
        ]
      }
    },
    {
      "name": "FormFieldContextProvider",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/Forms/context/FormFieldContextProvider.tsx",
      "line": 8,
      "column": 41,
      "parameters": [
        {
          "name": "__0",
          "type": "Props",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "value",
          "name",
          "children"
        ]
      }
    },
    {
      "name": "FormsLabel",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/Forms/subcomponent/FormSubcomponent.tsx",
      "line": 25,
      "column": 27,
      "parameters": [
        {
          "name": "__0",
          "type": "childrenProps",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "className",
          "children"
        ]
      }
    },
    {
      "name": "FormMessage",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/Forms/subcomponent/FormSubcomponent.tsx",
      "line": 33,
      "column": 28,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element | null",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useFormContext",
          "useFormFieldContext",
          "String"
        ],
        "usedVariables": [
          "formState",
          "errors",
          "name",
          "className"
        ]
      }
    },
    {
      "name": "FormField",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/Forms/subcomponent/FormSubcomponent.tsx",
      "line": 46,
      "column": 26,
      "parameters": [
        {
          "name": "__0",
          "type": "childrenProps & nameProps",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "FormFieldContextProvider",
          "name",
          "className",
          "children"
        ]
      }
    },
    {
      "name": "HorizontalLayout",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/Forms/subcomponent/FormSubcomponent.tsx",
      "line": 57,
      "column": 33,
      "parameters": [
        {
          "name": "__0",
          "type": "childrenProps",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "div",
          "className",
          "children"
        ]
      }
    },
    {
      "name": "FormControl",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/Forms/subcomponent/FormSubcomponent.tsx",
      "line": 65,
      "column": 28,
      "parameters": [
        {
          "name": "__0",
          "type": "Form.FormControlProps",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useFormFieldContext",
          "useFormContext",
          "register"
        ],
        "usedVariables": [
          "name",
          "control",
          "input",
          "className",
          "props"
        ]
      }
    },
    {
      "name": "FormButton",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/Forms/subcomponent/FormSubcomponent.tsx",
      "line": 80,
      "column": 27,
      "parameters": [
        {
          "name": "__0",
          "type": "extendClassProps & Omit<import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/index\").DetailedHTMLProps<import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/index\").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, \"ref\"> & { ref?: ((instance: HTMLButtonElement | null) => void | import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/index\").DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES[keyof import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/index\").DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES]) | import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/index\").RefObject<HTMLButtonElement> | null | undefined; }",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "button",
          "className",
          "extendClass",
          "rest",
          "children"
        ]
      }
    },
    {
      "name": "FormSubmit",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/Forms/subcomponent/FormSubcomponent.tsx",
      "line": 98,
      "column": 27,
      "parameters": [
        {
          "name": "__0",
          "type": "formSubmitProps",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "asChild",
          "FormButton",
          "disabled",
          "extendClass",
          "type",
          "children"
        ]
      }
    },
    {
      "name": "FormsRoot",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/Forms/FormsRoot.tsx",
      "line": 17,
      "column": 26,
      "parameters": [
        {
          "name": "__0",
          "type": "FormComponentProps<T>",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "handleSubmit"
        ],
        "usedVariables": [
          "handleSubmit",
          "formHook",
          "FormProvider",
          "onSubmit",
          "OnSubmit",
          "rest",
          "className",
          "children"
        ]
      }
    },
    {
      "name": "InputTextField",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/RichForm/RichForm.tsx",
      "line": 24,
      "column": 31,
      "parameters": [
        {
          "name": "__0",
          "type": "Props",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "name",
          "formField",
          "label"
        ]
      }
    },
    {
      "name": "TagFilterField",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/RichForm/RichForm.tsx",
      "line": 36,
      "column": 31,
      "parameters": [
        {
          "name": "__0",
          "type": "Props",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "name",
          "formField",
          "label"
        ]
      }
    },
    {
      "name": "EventField",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/RichForm/RichForm.tsx",
      "line": 59,
      "column": 27,
      "parameters": [
        {
          "name": "__0",
          "type": "EventFieldProps",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useFormContext",
          "useQuery",
          "setValue",
          "Number",
          "map",
          "String"
        ],
        "usedVariables": [
          "setValue",
          "data",
          "onEventFieldChange",
          "value",
          "formField",
          "name",
          "label",
          "SelectComponent",
          "defaultValue",
          "onValueChange"
        ]
      }
    },
    {
      "name": "onEventFieldChange",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/RichForm/RichForm.tsx",
      "line": 62,
      "column": 30,
      "parameters": [
        {
          "name": "value",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "void",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "EventField",
        "calledFunctions": [
          "setValue",
          "Number"
        ],
        "usedVariables": [
          "formField",
          "value"
        ]
      }
    },
    {
      "name": "GetLinkLabelFromKey",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/RichForm/type/LinkFormSchema.ts",
      "line": 38,
      "column": 1,
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "string",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "key"
        ]
      }
    },
    {
      "name": "transformArtistToFormData",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/utils/transformData.ts",
      "line": 7,
      "column": 1,
      "parameters": [
        {
          "name": "artistData",
          "type": "{ uuid?: number; author?: string; introduction?: string | null; photo?: string | null; twitterLink?: string | null; facebookLink?: string | null; instagramLink?: string | null; plurkLink?: string | null; bahaLink?: string | null; youtubeLink?: string | null; twitchLink?: string | null; officialLink?: string | null; storeLink?: string | null; myacgLink?: string | null; pixivLink?: string | null; email?: string | null; } | undefined",
          "optional": false
        }
      ],
      "returnType": "{ author: string; tags: Array<{ tag: string; count: number; index: number; }>; introduction?: string | undefined; photo?: string | undefined; twitterLink?: string | undefined; facebookLink?: string | undefined; instagramLink?: string | undefined; plurkLink?: string | undefined; bahaLink?: string | undefined; youtubeLink?: string | undefined; twitchLink?: string | undefined; officialLink?: string | undefined; storeLink?: string | undefined; myacgLink?: string | undefined; pixivLink?: string | undefined; email?: string | undefined; } | undefined",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "leadingComments": [
          "// Transform database artist record to form schema"
        ],
        "calledFunctions": [],
        "usedVariables": [
          "artistData",
          "undefined",
          "author",
          "introduction",
          "tags",
          "photo",
          "twitterLink",
          "facebookLink",
          "instagramLink",
          "plurkLink"
        ]
      }
    },
    {
      "name": "transformEventArtistToFormData",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/utils/transformData.ts",
      "line": 52,
      "column": 1,
      "parameters": [
        {
          "name": "eventArtistData",
          "type": "{ uuid?: number; eventId?: number | null; artistId?: number; boothName?: string | null; dm?: string | null; locationDay01?: string | null; locationDay02?: string | null; locationDay03?: string | null; } | undefined",
          "optional": false
        }
      ],
      "returnType": "{ eventId: number; artistId: number; boothName: string; dm?: string | undefined; locationDay01?: string | undefined; locationDay02?: string | undefined; locationDay03?: string | undefined; } | undefined",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "leadingComments": [
          "// Transform database eventArtist record to form schema"
        ],
        "calledFunctions": [],
        "usedVariables": [
          "eventArtistData",
          "undefined",
          "eventId",
          "artistId",
          "boothName",
          "dm",
          "locationDay01",
          "locationDay02",
          "locationDay03"
        ]
      }
    },
    {
      "name": "component",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/routes/edit.$artistId/index.tsx",
      "line": 20,
      "column": 14,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "Form"
        ]
      }
    },
    {
      "name": "Form",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/routes/edit.$artistId/index.tsx",
      "line": 23,
      "column": 1,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "FormDataProvider",
          "RefreshHelperProvider",
          "uniqueKey",
          "FormWithProviders"
        ]
      }
    },
    {
      "name": "FormWithProviders",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/routes/edit.$artistId/index.tsx",
      "line": 33,
      "column": 1,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element | null",
      "isAsync": false,
      "isExported": false,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "useUpdateArtistSubmission",
          "useParams",
          "useQuery",
          "transformArtistToFormData",
          "transformEventArtistToFormData",
          "log"
        ],
        "usedVariables": [
          "submitUpdateArtist",
          "artistId",
          "id",
          "artistData",
          "eventArtistData",
          "transformedArtistData",
          "transformedEventArtistData",
          "MultiStepFormProvider",
          "submitStep",
          "onSubmit"
        ]
      }
    },
    {
      "name": "useUpdateArtistSubmission",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/hooks/useUpdateArtistSubmission.ts",
      "line": 12,
      "column": 42,
      "parameters": [],
      "returnType": "() => Promise<void>",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "log",
          "useParams",
          "useMutation",
          "useFormDataContext",
          "getEntityFormData",
          "toString",
          "mutateAsync"
        ],
        "usedVariables": [
          "artistId",
          "id",
          "updateArtist",
          "updateEventArtist",
          "getFormData",
          "state",
          "artistStep",
          "eventArtistStep",
          "TagHelper",
          "ArrayTagHelper"
        ]
      }
    },
    {
      "name": "getEntityFormData",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/hooks/useUpdateArtistSubmission.ts",
      "line": 53,
      "column": 27,
      "parameters": [
        {
          "name": "getFormData",
          "type": "<T>(key: string) => T",
          "optional": false
        }
      ],
      "returnType": "EntityFormData",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "getFormData"
        ],
        "usedVariables": [
          "artistStep",
          "ArtistFormSchema",
          "eventArtistStep",
          "EventArtistSchema",
          "productStep"
        ]
      }
    },
    {
      "name": "useUploadImageMutation",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/hooks/useUploadImage.ts",
      "line": 9,
      "column": 39,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@tanstack/query-core/build/legacy/hydration-mKPlgzt9\").y<import(\"/home/stangen/code/Douren-Monorepo/node_modules/@tanstack/query-core/build/legacy/hydration-mKPlgzt9\").aS<string, Error, File | null, unknown>, { mutate: import(\"/home/stangen/code/Douren-Monorepo/node_modules/@tanstack/react-query/build/legacy/types\").UseMutateFunction<string, Error, File | null, unknown>; }> & { mutateAsync: import(\"/home/stangen/code/Douren-Monorepo/node_modules/@tanstack/react-query/build/legacy/types\").UseMutateAsyncFunction<string, Error, File | null, unknown>; }",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useMutation",
          "uploadImage"
        ],
        "usedVariables": [
          "mutationFn",
          "file",
          "File"
        ]
      }
    },
    {
      "name": "mutationFn",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/hooks/useUploadImage.ts",
      "line": 11,
      "column": 17,
      "parameters": [
        {
          "name": "file",
          "type": "File | null",
          "optional": false
        }
      ],
      "returnType": "Promise<string>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "useUploadImageMutation",
        "calledFunctions": [
          "uploadImage"
        ],
        "usedVariables": [
          "file"
        ]
      }
    },
    {
      "name": "useUploadImageRef",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/hooks/useUploadImage.ts",
      "line": 17,
      "column": 34,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/index\").MutableRefObject<FormImageUploadRef>",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useRef"
        ],
        "usedVariables": [
          "FormImageUploadRef"
        ]
      }
    },
    {
      "name": "uploadImage",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/hooks/useUploadImage.ts",
      "line": 21,
      "column": 1,
      "parameters": [
        {
          "name": "file",
          "type": "File | null",
          "optional": false
        }
      ],
      "returnType": "Promise<string>",
      "isAsync": true,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "append",
          "json",
          "post"
        ],
        "usedVariables": [
          "file",
          "Error",
          "formData",
          "FormData",
          "link",
          "ImageResponse",
          "meta",
          "body",
          "headers",
          "Authorization"
        ]
      }
    },
    {
      "name": "useFormDataContext",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/FormDataContext/useFormDataContext.ts",
      "line": 5,
      "column": 1,
      "parameters": [
        {
          "name": "selector",
          "type": "(state: FormDataState) => U",
          "optional": false
        }
      ],
      "returnType": "U",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "useContext",
          "useStore"
        ],
        "usedVariables": [
          "state",
          "FormDataContext",
          "Error",
          "selector"
        ]
      }
    },
    {
      "name": "useMultiStepFormContext",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/MultiStepForm/context/useMultiStepFormContext.ts",
      "line": 8,
      "column": 1,
      "parameters": [
        {
          "name": "selector",
          "type": "(state: MultiStepStore) => U",
          "optional": false
        }
      ],
      "returnType": "U",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "useContext",
          "useStore"
        ],
        "usedVariables": [
          "state",
          "MultiStepFormContext",
          "Error",
          "selector"
        ]
      }
    },
    {
      "name": "initMultiStepFormFunction",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/MultiStepForm/context/MultiStepFormContext.tsx",
      "line": 19,
      "column": 35,
      "parameters": [
        {
          "name": "submitStep",
          "type": "number",
          "optional": false
        },
        {
          "name": "onSubmit",
          "type": "() => Promise<void>",
          "optional": false
        }
      ],
      "returnType": "((setState: { (partial: MultiStepStore | Partial<MultiStepStore> | ((state: MultiStepStore) => MultiStepStore | Partial<MultiStepStore>), replace?: false): void; (state: MultiStepStore | ((state: MultiStepStore) => MultiStepStore), replace: true): void; }, getState: () => MultiStepStore, store: import(\"/home/stangen/code/Douren-Monorepo/node_modules/zustand/vanilla\").StoreApi<MultiStepStore>) => MultiStepStore) & { $$storeMutators?: [] | undefined; }",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "set"
        ],
        "usedVariables": [
          "multiStepFormFunction",
          "StateCreator",
          "MultiStepStore",
          "set",
          "step",
          "bumpStep",
          "state",
          "goBackStep",
          "onSubmit",
          "submitStep"
        ]
      }
    },
    {
      "name": "multiStepFormFunction",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/MultiStepForm/context/MultiStepFormContext.tsx",
      "line": 23,
      "column": 63,
      "parameters": [
        {
          "name": "set",
          "type": "{ (partial: MultiStepStore | Partial<MultiStepStore> | ((state: MultiStepStore) => MultiStepStore | Partial<MultiStepStore>), replace?: false): void; (state: MultiStepStore | ((state: MultiStepStore) => MultiStepStore), replace: true): void; }",
          "optional": false
        }
      ],
      "returnType": "{ step: number; bumpStep: () => void; goBackStep: () => void; onSubmit: () => Promise<void>; submitStep: number; }",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "initMultiStepFormFunction",
        "calledFunctions": [
          "set"
        ],
        "usedVariables": [
          "step",
          "bumpStep",
          "state",
          "goBackStep",
          "onSubmit",
          "submitStep"
        ]
      }
    },
    {
      "name": "bumpStep",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/MultiStepForm/context/MultiStepFormContext.tsx",
      "line": 25,
      "column": 15,
      "parameters": [],
      "returnType": "void",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "multiStepFormFunction",
        "calledFunctions": [
          "set"
        ],
        "usedVariables": [
          "state",
          "step"
        ]
      }
    },
    {
      "name": "goBackStep",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/MultiStepForm/context/MultiStepFormContext.tsx",
      "line": 30,
      "column": 17,
      "parameters": [],
      "returnType": "void",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "multiStepFormFunction",
        "calledFunctions": [
          "set"
        ],
        "usedVariables": [
          "state",
          "step"
        ]
      }
    },
    {
      "name": "MultiStepFormProvider",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/MultiStepForm/context/MultiStepFormContext.tsx",
      "line": 40,
      "column": 38,
      "parameters": [
        {
          "name": "__0",
          "type": "props",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useState",
          "createStore",
          "initMultiStepFormFunction",
          "useEffect",
          "subscribe",
          "log",
          "onSubmit"
        ],
        "usedVariables": [
          "store",
          "MultiStepStore",
          "submitStep",
          "onSubmit",
          "unsubscribe",
          "state",
          "value",
          "children"
        ]
      }
    },
    {
      "name": "useFormStep",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/FormStep/useFormStep.ts",
      "line": 14,
      "column": 28,
      "parameters": [],
      "returnType": "FormStepContextValue",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useContext"
        ],
        "usedVariables": [
          "context",
          "FormStepContext",
          "Error"
        ]
      }
    },
    {
      "name": "FormStep",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/FormStep/FormStep.tsx",
      "line": 22,
      "column": 1,
      "parameters": [
        {
          "name": "__0",
          "type": "FormStepProps",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element | null",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "useMultiStepFormContext",
          "useState",
          "skipIf",
          "bumpStep",
          "setIsProcessing",
          "onNext",
          "goBackStep"
        ],
        "usedVariables": [
          "bumpStep",
          "goBackStep",
          "step",
          "currentStep",
          "state",
          "isProcessing",
          "setIsProcessing",
          "activeStep",
          "undefined",
          "handleNext"
        ]
      }
    },
    {
      "name": "handleNext",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/FormStep/FormStep.tsx",
      "line": 42,
      "column": 22,
      "parameters": [],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "FormStep",
        "calledFunctions": [
          "skipIf",
          "bumpStep",
          "setIsProcessing",
          "onNext"
        ],
        "usedVariables": [
          "onNext"
        ]
      }
    },
    {
      "name": "handlePrevious",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/FormStep/FormStep.tsx",
      "line": 60,
      "column": 26,
      "parameters": [],
      "returnType": "void",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "FormStep",
        "calledFunctions": [
          "goBackStep"
        ],
        "usedVariables": []
      }
    },
    {
      "name": "FormStepProvider",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/FormStep/FormStep.tsx",
      "line": 82,
      "column": 6,
      "parameters": [
        {
          "name": "__0",
          "type": "{ stepId: string; onNext: () => Promise<void>; onPrevious: () => void; isProcessing: boolean; children: React.ReactNode; }",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "value",
          "stepId",
          "onNext",
          "onPrevious",
          "isProcessing",
          "children"
        ]
      }
    },
    {
      "name": "FormStepNavigation",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/FormStep/FormStepNavigation.tsx",
      "line": 5,
      "column": 35,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useFormStep"
        ],
        "usedVariables": [
          "onNext",
          "onPrevious",
          "isProcessing",
          "div",
          "className",
          "onClick",
          "extendClass",
          "type",
          "disabled",
          "ArrowLeft"
        ]
      }
    },
    {
      "name": "ArtistForm",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/artist.tsx",
      "line": 21,
      "column": 1,
      "parameters": [
        {
          "name": "__0",
          "type": "artistFormProps",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "useForm",
          "zodResolver",
          "useUploadImageRef",
          "useFormDataContext",
          "useFormStep",
          "log",
          "uploadImage",
          "setData",
          "bumpStep",
          "map"
        ],
        "usedVariables": [
          "formHook",
          "ArtistFormSchema",
          "resolver",
          "artistFormSchema",
          "defaultValues",
          "uploadImageRef",
          "setData",
          "state",
          "bumpStep",
          "stepId"
        ]
      }
    },
    {
      "name": "onSubmit",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/artist.tsx",
      "line": 30,
      "column": 53,
      "parameters": [
        {
          "name": "data",
          "type": "{ author: string; tags: Array<{ tag: string; count: number; index: number; }>; introduction?: string | undefined; photo?: string | undefined; twitterLink?: string | undefined; facebookLink?: string | undefined; instagramLink?: string | undefined; plurkLink?: string | undefined; bahaLink?: string | undefined; youtubeLink?: string | undefined; twitchLink?: string | undefined; officialLink?: string | undefined; storeLink?: string | undefined; myacgLink?: string | undefined; pixivLink?: string | undefined; email?: string | undefined; }",
          "optional": false
        }
      ],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "ArtistForm",
        "calledFunctions": [
          "log",
          "uploadImage",
          "setData",
          "bumpStep"
        ],
        "usedVariables": [
          "imgLink",
          "stepId",
          "data",
          "photo"
        ]
      }
    },
    {
      "name": "EventArtistForm",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/eventartist.tsx",
      "line": 21,
      "column": 1,
      "parameters": [
        {
          "name": "__0",
          "type": "EventArtistFormProps",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "useForm",
          "zodResolver",
          "useUploadImageRef",
          "useFormDataContext",
          "useFormStep",
          "useMultiStepFormContext",
          "uploadImage",
          "setData",
          "bumpStep",
          "goBack"
        ],
        "usedVariables": [
          "formHook",
          "EventArtistSchema",
          "resolver",
          "eventArtistSchema",
          "defaultValues",
          "eventId",
          "artistId",
          "uploadImageRef",
          "setData",
          "state"
        ]
      }
    },
    {
      "name": "onSubmit",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/eventartist.tsx",
      "line": 33,
      "column": 54,
      "parameters": [
        {
          "name": "data",
          "type": "{ eventId: number; artistId: number; boothName: string; dm?: string | undefined; locationDay01?: string | undefined; locationDay02?: string | undefined; locationDay03?: string | undefined; }",
          "optional": false
        }
      ],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "EventArtistForm",
        "calledFunctions": [
          "uploadImage",
          "setData",
          "bumpStep"
        ],
        "usedVariables": [
          "link",
          "data",
          "dm"
        ]
      }
    },
    {
      "name": "ProductFormContextProvider",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/context/ProductFormContext.tsx",
      "line": 39,
      "column": 43,
      "parameters": [
        {
          "name": "__0",
          "type": "Props",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useState"
        ],
        "usedVariables": [
          "state",
          "set",
          "ProductFormSubmitHandler",
          "value",
          "children"
        ]
      }
    },
    {
      "name": "useProductFormContext",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/context/useProductFormContext.ts",
      "line": 4,
      "column": 38,
      "parameters": [],
      "returnType": "[Array<import(\"/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/context/ProductFormContext\").ProductFormType>, import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/index\").Dispatch<import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/index\").SetStateAction<Array<import(\"/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/context/ProductFormContext\").ProductFormType>>>]",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useContext"
        ],
        "usedVariables": [
          "data",
          "ProductFormContext",
          "Error"
        ]
      }
    },
    {
      "name": "AllProductForm",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/product.tsx",
      "line": 17,
      "column": 1,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "useState",
          "setCount",
          "map"
        ],
        "usedVariables": [
          "count",
          "setCount",
          "ProductFormContextProvider",
          "FormButton",
          "extendClass",
          "onClick",
          "state",
          "i",
          "ProductForm",
          "key"
        ]
      }
    },
    {
      "name": "ProductForm",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/product.tsx",
      "line": 37,
      "column": 21,
      "parameters": [
        {
          "name": "__0",
          "type": "formProps",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useForm",
          "zodResolver",
          "useUploadImageRef",
          "useProductFormContext",
          "log",
          "useEffect",
          "setProductHook",
          "filter"
        ],
        "usedVariables": [
          "formHook",
          "ProductFormSchema",
          "resolver",
          "productFormSchema",
          "thumbnailImageRef",
          "previewImageRef",
          "setProductHook",
          "ProductSubmitHandler",
          "SubmitHandler",
          "data"
        ]
      }
    },
    {
      "name": "ProductSubmitHandler",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/product.tsx",
      "line": 45,
      "column": 66,
      "parameters": [
        {
          "name": "data",
          "type": "{ title: string; preview?: string | undefined; thumbnail?: string | undefined; }",
          "optional": false
        }
      ],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "ProductForm",
        "calledFunctions": [
          "log"
        ],
        "usedVariables": [
          "data"
        ]
      }
    },
    {
      "name": "ProductFormSubmit",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/product.tsx",
      "line": 90,
      "column": 27,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useProductFormContext",
          "useFormDataContext",
          "useMultiStepFormContext",
          "forEach",
          "submitHook",
          "getValues",
          "push",
          "uploadImage",
          "all",
          "map"
        ],
        "usedVariables": [
          "productFormData",
          "setProductStep",
          "state",
          "goBackStep",
          "bumpStep",
          "onClick",
          "validData",
          "ProductFormSchema",
          "allPromises",
          "Promise"
        ]
      }
    },
    {
      "name": "onClick",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/product.tsx",
      "line": 95,
      "column": 19,
      "parameters": [],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "ProductFormSubmit",
        "calledFunctions": [
          "forEach",
          "submitHook",
          "getValues",
          "push",
          "uploadImage",
          "all",
          "map",
          "log",
          "setProductStep",
          "bumpStep"
        ],
        "usedVariables": [
          "validData",
          "ProductFormSchema",
          "allPromises",
          "Promise",
          "item",
          "i",
          "data",
          "resolvedPromises",
          "index",
          "thumbnailUrl"
        ]
      }
    },
    {
      "name": "useStepController",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/useStepController.ts",
      "line": 1,
      "column": 1,
      "parameters": [],
      "returnType": "void",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": []
      }
    },
    {
      "name": "DisplayTitle",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/components/Display.tsx",
      "line": 6,
      "column": 29,
      "parameters": [
        {
          "name": "__0",
          "type": "{ children: ReactNode; }",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "div",
          "className",
          "children"
        ]
      }
    },
    {
      "name": "DisplayText",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/components/Display.tsx",
      "line": 10,
      "column": 28,
      "parameters": [
        {
          "name": "__0",
          "type": "{ children: ReactNode; }",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "div",
          "className",
          "children"
        ]
      }
    },
    {
      "name": "DisplayArtistStep",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/components/DisplayArtistStep.tsx",
      "line": 8,
      "column": 34,
      "parameters": [
        {
          "name": "__0",
          "type": "props",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "map",
          "keys",
          "renderArtistKey"
        ],
        "usedVariables": [
          "div",
          "className",
          "artistStep",
          "key",
          "DisplayTitle",
          "DisplayText"
        ]
      }
    },
    {
      "name": "renderArtistKey",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/components/EntityForm/components/DisplayArtistStep.tsx",
      "line": 23,
      "column": 1,
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "\"自我介紹\" | undefined",
      "isAsync": false,
      "isExported": false,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "key"
        ]
      }
    },
    {
      "name": "ArtistContainer",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/routes/-components/ArtistContainer.tsx",
      "line": 15,
      "column": 32,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element | null",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "useSearchContext",
          "useTagFilterContext",
          "join",
          "map",
          "useSortSelectContext",
          "usePaginationContext",
          "useQuery",
          "String",
          "usePagination",
          "log"
        ],
        "usedVariables": [
          "search",
          "tagFilter",
          "state",
          "allTag",
          "val",
          "sortSelect",
          "page",
          "setPage",
          "res",
          "searchTable"
        ]
      }
    },
    {
      "name": "Index",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/routes/index.tsx",
      "line": 22,
      "column": 1,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "log",
          "useFetchTagData"
        ],
        "usedVariables": [
          "tag",
          "div",
          "className",
          "DataOperationProvider",
          "SearchContainer",
          "FilterContainer",
          "sortItem",
          "ArtistContainer"
        ]
      }
    },
    {
      "name": "component",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/routes/new/index.tsx",
      "line": 16,
      "column": 14,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "Form"
        ]
      }
    },
    {
      "name": "Form",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/routes/new/index.tsx",
      "line": 19,
      "column": 1,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "FormDataProvider",
          "RefreshHelperProvider",
          "uniqueKey",
          "FormWithProviders"
        ]
      }
    },
    {
      "name": "FormWithProviders",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/cms/src/routes/new/index.tsx",
      "line": 29,
      "column": 1,
      "parameters": [],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "useNewArtistSubmission"
        ],
        "usedVariables": [
          "submitNewArtist",
          "MultiStepFormProvider",
          "submitStep",
          "onSubmit",
          "FormStep",
          "activeStep",
          "stepId",
          "ArtistForm",
          "EventArtistForm",
          "CompleteStep"
        ]
      }
    },
    {
      "name": "headers",
      "filePath": "fe/cms/src/main.tsx",
      "line": 25,
      "column": 16,
      "parameters": [],
      "returnType": "{ Authorization: string; } | { Authorization?: undefined; }",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "token",
          "meta",
          "Authorization"
        ]
      }
    },
    {
      "name": "initDB",
      "filePath": "/home/stangen/code/Douren-Monorepo/pkg/database/src/db/initdb.ts",
      "line": 4,
      "column": 1,
      "parameters": [
        {
          "name": "url",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/neon-http/driver\").NeonHttpDatabase<typeof schema>",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "neon",
          "drizzle"
        ],
        "usedVariables": [
          "sql",
          "url",
          "db",
          "schema"
        ]
      }
    },
    {
      "name": "uuid",
      "filePath": "be/douren-backend/src/schema/artist.zod.ts",
      "line": 6,
      "column": 8,
      "parameters": [
        {
          "name": "schema",
          "type": "{ uuid: z.ZodNumber; author: z.ZodString; plurkLink: z.ZodString; bahaLink: z.ZodString; twitchLink: z.ZodString; youtubeLink: z.ZodString; twitterLink: z.ZodString; facebookLink: z.ZodString; instagramLink: z.ZodString; pixivLink: z.ZodString; tags: z.ZodString; introduction: z.ZodString; photo: z.ZodString; myacgLink: z.ZodString; storeLink: z.ZodString; email: z.ZodString; officialLink: z.ZodString; }",
          "optional": false
        }
      ],
      "returnType": "z.ZodOptional<z.ZodNumber>",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "optional"
        ],
        "usedVariables": []
      }
    },
    {
      "name": "verifyUser",
      "filePath": "be/douren-backend/src/utlis/authHelper.ts",
      "line": 3,
      "column": 1,
      "parameters": [
        {
          "name": "c",
          "type": "Context<any, any, {}>",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "header",
          "startsWith",
          "split"
        ],
        "usedVariables": [
          "authHeader",
          "token"
        ]
      }
    },
    {
      "name": "verifyAdminUser",
      "filePath": "be/douren-backend/src/utlis/authHelper.ts",
      "line": 34,
      "column": 1,
      "parameters": [
        {
          "name": "c",
          "type": "Context<any, any, {}>",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "header",
          "startsWith",
          "split"
        ],
        "usedVariables": [
          "authHeader",
          "token"
        ]
      }
    },
    {
      "name": "verifyImageUser",
      "filePath": "be/douren-backend/src/utlis/authHelper.ts",
      "line": 53,
      "column": 1,
      "parameters": [
        {
          "name": "c",
          "type": "Context<any, any, {}>",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "header",
          "startsWith",
          "split"
        ],
        "usedVariables": [
          "authHeader",
          "token"
        ]
      }
    },
    {
      "name": "createPaginationObject",
      "filePath": "be/douren-backend/src/helper/createPaginationObject.ts",
      "line": 1,
      "column": 1,
      "parameters": [
        {
          "name": "data",
          "type": "T",
          "optional": false
        },
        {
          "name": "currentPage",
          "type": "number",
          "optional": false
        },
        {
          "name": "pageSize",
          "type": "number",
          "optional": false
        },
        {
          "name": "totalCount",
          "type": "number",
          "optional": false
        }
      ],
      "returnType": "{ data: T; totalCount: number; totalPage: number; nextPageAvailable: boolean; previousPageAvailable: boolean; pageSize: number; }",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "ceil"
        ],
        "usedVariables": [
          "totalPage",
          "totalCount",
          "pageSize",
          "data",
          "nextPageAvailable",
          "currentPage",
          "previousPageAvailable"
        ]
      }
    },
    {
      "name": "BuildQuery",
      "filePath": "/home/stangen/code/Douren-Monorepo/pkg/database/src/index.ts",
      "line": 9,
      "column": 1,
      "parameters": [
        {
          "name": "query",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "SelectDatabaseQueryBuilder<T>",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "SelectDatabaseQueryBuilder",
          "query"
        ]
      }
    },
    {
      "name": "withFilterEventName",
      "filePath": "/home/stangen/code/Douren-Monorepo/pkg/database/src/index.ts",
      "line": 18,
      "column": 3,
      "parameters": [
        {
          "name": "eventName",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "where",
          "eq"
        ],
        "usedVariables": [
          "eventName"
        ]
      }
    },
    {
      "name": "withOrderBy",
      "filePath": "/home/stangen/code/Douren-Monorepo/pkg/database/src/index.ts",
      "line": 22,
      "column": 3,
      "parameters": [
        {
          "name": "sortBy",
          "type": "((column: AnyColumn | SQLWrapper) => SQL) | ((column: AnyColumn | SQLWrapper) => SQL)",
          "optional": false
        },
        {
          "name": "table",
          "type": "SQLWrapper | AnyColumn",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "orderBy",
          "sortBy"
        ],
        "usedVariables": [
          "table"
        ]
      }
    },
    {
      "name": "withPagination",
      "filePath": "/home/stangen/code/Douren-Monorepo/pkg/database/src/index.ts",
      "line": 26,
      "column": 3,
      "parameters": [
        {
          "name": "page",
          "type": "number",
          "optional": false
        },
        {
          "name": "size",
          "type": "number",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "offset",
          "limit"
        ],
        "usedVariables": [
          "size",
          "page"
        ]
      }
    },
    {
      "name": "withIlikeSearchByTable",
      "filePath": "/home/stangen/code/Douren-Monorepo/pkg/database/src/index.ts",
      "line": 30,
      "column": 3,
      "parameters": [
        {
          "name": "search",
          "type": "string",
          "optional": false
        },
        {
          "name": "table",
          "type": "Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnBaseConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column-builder\").ColumnDataType, string>, object, object>",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "where",
          "ilike"
        ],
        "usedVariables": [
          "table",
          "search"
        ]
      }
    },
    {
      "name": "withTableIsNotNull",
      "filePath": "/home/stangen/code/Douren-Monorepo/pkg/database/src/index.ts",
      "line": 34,
      "column": 3,
      "parameters": [
        {
          "name": "table",
          "type": "Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnBaseConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column-builder\").ColumnDataType, string>, object, object>",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "where",
          "isNotNull"
        ],
        "usedVariables": [
          "table"
        ]
      }
    },
    {
      "name": "withTableIsNot",
      "filePath": "/home/stangen/code/Douren-Monorepo/pkg/database/src/index.ts",
      "line": 38,
      "column": 3,
      "parameters": [
        {
          "name": "table",
          "type": "Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnBaseConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column-builder\").ColumnDataType, string>, object, object>",
          "optional": false
        },
        {
          "name": "value",
          "type": "string | number",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "where",
          "not",
          "eq"
        ],
        "usedVariables": [
          "table",
          "value"
        ]
      }
    },
    {
      "name": "withAndFilter",
      "filePath": "/home/stangen/code/Douren-Monorepo/pkg/database/src/index.ts",
      "line": 42,
      "column": 3,
      "parameters": [
        {
          "name": "filter",
          "type": "Array<SQLWrapper | undefined>",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "where",
          "and"
        ],
        "usedVariables": [
          "filter"
        ]
      }
    },
    {
      "name": "withFilter",
      "filePath": "/home/stangen/code/Douren-Monorepo/pkg/database/src/index.ts",
      "line": 46,
      "column": 3,
      "parameters": [
        {
          "name": "filter",
          "type": "SQL<unknown>",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "where"
        ],
        "usedVariables": [
          "filter"
        ]
      }
    },
    {
      "name": "Build",
      "filePath": "/home/stangen/code/Douren-Monorepo/pkg/database/src/index.ts",
      "line": 50,
      "column": 3,
      "parameters": [],
      "returnType": "SelectDatabaseQueryBuilder<T>",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [],
        "usedVariables": [
          "SelectDatabaseQueryBuilder"
        ]
      }
    },
    {
      "name": "processTableName",
      "filePath": "be/douren-backend/src/helper/processTableName.ts",
      "line": 3,
      "column": 1,
      "parameters": [
        {
          "name": "table",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"author\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}> | import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"location_day01\"; tableName: \"event_dm\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}> | import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"location_day02\"; tableName: \"event_dm\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}> | import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"location_day03\"; tableName: \"event_dm\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}> | import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"booth_name\"; tableName: \"event_dm\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "table"
        ]
      }
    },
    {
      "name": "processTagConditions",
      "filePath": "be/douren-backend/src/helper/processTagConditions.ts",
      "line": 4,
      "column": 1,
      "parameters": [
        {
          "name": "tag",
          "type": "string | undefined",
          "optional": true
        }
      ],
      "returnType": "Array<SQLWrapper>",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "split",
          "push",
          "ilike"
        ],
        "usedVariables": [
          "tagConditions",
          "SQLWrapper",
          "tag",
          "element"
        ]
      }
    },
    {
      "name": "BuildQuery",
      "filePath": "be/douren-backend/src/QueryBuilder/index.ts",
      "line": 16,
      "column": 2,
      "parameters": [],
      "returnType": "{ SelectQuery: unknown; CountQuery: unknown; }",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "IQueryBuilder"
      }
    },
    {
      "name": "BuildQuery",
      "filePath": "be/douren-backend/src/QueryBuilder/index.ts",
      "line": 35,
      "column": 2,
      "parameters": [],
      "returnType": "{ SelectQuery: import(\"/home/stangen/code/Douren-Monorepo/pkg/database/src/index\").SelectDatabaseQueryBuilder<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgSelectBase<\"author_main\", { tags: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/index\").SQL.Aliased<unknown>; uuid: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"id\"; tableName: \"author_main\"; dataType: \"number\"; columnType: \"PgInteger\"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; hasRuntimeDefault: false; enumValues: undefined; baseColumn: never; generated: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column-builder\").GeneratedColumnConfig<number> & { as: any; type: \"byDefault\"; }; }, {}, {}>; author: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"author\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; introduction: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"introduction\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; twitterLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"twitter_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; youtubeLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"youtube_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; facebookLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"facebook_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; instagramLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"instagram_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; pixivLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"pixiv_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; plurkLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"plurk_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; bahaLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"baha_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; twitchLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"twitch_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; myacgLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"myacg_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; storeLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"store_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; officialLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"official_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; photo: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"photo\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; }, \"partial\", Record<\"author_main\", \"not-null\"> & { author_tag: \"nullable\"; } & { tag: \"nullable\"; }, true, never, Array<{ tags: unknown; uuid: number; author: string; introduction: string | null; twitterLink: string | null; youtubeLink: string | null; facebookLink: string | null; instagramLink: string | null; pixivLink: string | null; plurkLink: string | null; bahaLink: string | null; twitchLink: string | null; myacgLink: string | null; storeLink: string | null; officialLink: string | null; photo: string | null; }>, { tags: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/index\").SQL.Aliased<unknown>; uuid: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"id\"; tableName: \"author_main\"; dataType: \"number\"; columnType: \"PgInteger\"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; hasRuntimeDefault: false; enumValues: undefined; baseColumn: never; generated: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column-builder\").GeneratedColumnConfig<number> & { as: any; type: \"byDefault\"; }; }, {}, {}>; author: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"author\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; introduction: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"introduction\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; twitterLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"twitter_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; youtubeLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"youtube_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; facebookLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"facebook_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; instagramLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"instagram_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; pixivLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"pixiv_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; plurkLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"plurk_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; bahaLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"baha_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; twitchLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"twitch_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; myacgLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"myacg_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; storeLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"store_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; officialLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"official_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; photo: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"photo\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; }>>; CountQuery: import(\"/home/stangen/code/Douren-Monorepo/pkg/database/src/index\").SelectDatabaseQueryBuilder<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgSelectBase<\"author_main\", { totalCount: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/index\").SQL<number>; }, \"partial\", Record<\"author_main\", \"not-null\">, true, never, Array<{ totalCount: number; }>, { totalCount: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/utils\").DrizzleTypeError<\"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`\">; }>>; }",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "ArtistQueryBuilder",
        "calledFunctions": [
          "$dynamic",
          "groupBy",
          "leftJoin",
          "from",
          "select",
          "eq",
          "count",
          "withTableIsNot",
          "BuildQuery",
          "Build"
        ],
        "usedVariables": [
          "query",
          "FETCH_ARTIST_OBJECT",
          "countQuery",
          "totalCount",
          "CountQuery",
          "SelectQuery",
          "PAGE_SIZE"
        ]
      }
    },
    {
      "name": "BuildQuery",
      "filePath": "be/douren-backend/src/QueryBuilder/index.ts",
      "line": 81,
      "column": 2,
      "parameters": [],
      "returnType": "{ SelectQuery: import(\"/home/stangen/code/Douren-Monorepo/pkg/database/src/index\").SelectDatabaseQueryBuilder<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgSelectBase<\"event_dm\", { boothName: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"booth_name\"; tableName: \"event_dm\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; locationDay01: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"location_day01\"; tableName: \"event_dm\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; locationDay02: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"location_day02\"; tableName: \"event_dm\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; locationDay03: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"location_day03\"; tableName: \"event_dm\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; DM: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"dm\"; tableName: \"event_dm\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; tags: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/index\").SQL.Aliased<unknown>; uuid: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"id\"; tableName: \"author_main\"; dataType: \"number\"; columnType: \"PgInteger\"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; hasRuntimeDefault: false; enumValues: undefined; baseColumn: never; generated: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column-builder\").GeneratedColumnConfig<number> & { as: any; type: \"byDefault\"; }; }, {}, {}>; author: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"author\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; introduction: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"introduction\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; twitterLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"twitter_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; youtubeLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"youtube_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; facebookLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"facebook_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; instagramLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"instagram_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; pixivLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"pixiv_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; plurkLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"plurk_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; bahaLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"baha_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; twitchLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"twitch_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; myacgLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"myacg_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; storeLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"store_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; officialLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"official_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; photo: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"photo\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; }, \"partial\", Record<\"event_dm\", \"not-null\"> & { author_main: \"nullable\"; } & { author_tag: \"nullable\"; } & { tag: \"nullable\"; } & { event: \"nullable\"; }, true, never, Array<{ boothName: string | null; locationDay01: string | null; locationDay02: string | null; locationDay03: string | null; DM: string | null; tags: unknown; uuid: number | null; author: string | null; introduction: string | null; twitterLink: string | null; youtubeLink: string | null; facebookLink: string | null; instagramLink: string | null; pixivLink: string | null; plurkLink: string | null; bahaLink: string | null; twitchLink: string | null; myacgLink: string | null; storeLink: string | null; officialLink: string | null; photo: string | null; }>, { boothName: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"booth_name\"; tableName: \"event_dm\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; locationDay01: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"location_day01\"; tableName: \"event_dm\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; locationDay02: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"location_day02\"; tableName: \"event_dm\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; locationDay03: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"location_day03\"; tableName: \"event_dm\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; DM: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgColumn<{ name: \"dm\"; tableName: \"event_dm\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, {}, {}>; tags: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/index\").SQL.Aliased<unknown>; uuid: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").UpdateColConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnTypeConfig<{ name: \"id\"; tableName: \"author_main\"; dataType: \"number\"; columnType: \"PgInteger\"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; hasRuntimeDefault: false; enumValues: undefined; baseColumn: never; generated: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column-builder\").GeneratedColumnConfig<number> & { as: any; type: \"byDefault\"; }; }, { dialect: \"pg\"; }>, { notNull: false; }>, object, object>; author: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").UpdateColConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnTypeConfig<{ name: \"author\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, { dialect: \"pg\"; }>, { notNull: false; }>, object, object>; introduction: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").UpdateColConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnTypeConfig<{ name: \"introduction\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, { dialect: \"pg\"; }>, { notNull: false; }>, object, object>; twitterLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").UpdateColConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnTypeConfig<{ name: \"twitter_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, { dialect: \"pg\"; }>, { notNull: false; }>, object, object>; youtubeLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").UpdateColConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnTypeConfig<{ name: \"youtube_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, { dialect: \"pg\"; }>, { notNull: false; }>, object, object>; facebookLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").UpdateColConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnTypeConfig<{ name: \"facebook_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, { dialect: \"pg\"; }>, { notNull: false; }>, object, object>; instagramLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").UpdateColConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnTypeConfig<{ name: \"instagram_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, { dialect: \"pg\"; }>, { notNull: false; }>, object, object>; pixivLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").UpdateColConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnTypeConfig<{ name: \"pixiv_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, { dialect: \"pg\"; }>, { notNull: false; }>, object, object>; plurkLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").UpdateColConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnTypeConfig<{ name: \"plurk_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, { dialect: \"pg\"; }>, { notNull: false; }>, object, object>; bahaLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").UpdateColConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnTypeConfig<{ name: \"baha_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, { dialect: \"pg\"; }>, { notNull: false; }>, object, object>; twitchLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").UpdateColConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnTypeConfig<{ name: \"twitch_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, { dialect: \"pg\"; }>, { notNull: false; }>, object, object>; myacgLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").UpdateColConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnTypeConfig<{ name: \"myacg_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, { dialect: \"pg\"; }>, { notNull: false; }>, object, object>; storeLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").UpdateColConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnTypeConfig<{ name: \"store_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, { dialect: \"pg\"; }>, { notNull: false; }>, object, object>; officialLink: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").UpdateColConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnTypeConfig<{ name: \"official_link\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, { dialect: \"pg\"; }>, { notNull: false; }>, object, object>; photo: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").UpdateColConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnTypeConfig<{ name: \"photo\"; tableName: \"author_main\"; dataType: \"string\"; columnType: \"PgText\"; data: string; driverParam: string; notNull: false; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; hasRuntimeDefault: false; enumValues: [string, ...string[]]; baseColumn: never; generated: undefined; }, { dialect: \"pg\"; }>, { notNull: false; }>, object, object>; }>>; CountQuery: import(\"/home/stangen/code/Douren-Monorepo/pkg/database/src/index\").SelectDatabaseQueryBuilder<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgSelectBase<\"event_dm\", { totalCount: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/index\").SQL<number>; }, \"partial\", Record<\"event_dm\", \"not-null\"> & { event: \"nullable\"; } & { author_main: \"nullable\"; }, true, never, Array<{ totalCount: number; }>, { totalCount: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/utils\").DrizzleTypeError<\"You cannot reference this field without assigning it an alias first - use `.as(<alias>)`\">; }>>; }",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "EventArtistQueryBuilder",
        "calledFunctions": [
          "$dynamic",
          "groupBy",
          "leftJoin",
          "from",
          "select",
          "eq",
          "count",
          "Build",
          "withFilterEventName",
          "BuildQuery"
        ],
        "usedVariables": [
          "query",
          "FETCH_EVENT_ARTIST_OBJECT",
          "countQuery",
          "totalCount",
          "CountQuery",
          "SelectQuery",
          "PAGE_SIZE"
        ]
      }
    },
    {
      "name": "NewArtistQueryBuilder",
      "filePath": "be/douren-backend/src/QueryBuilder/index.ts",
      "line": 135,
      "column": 1,
      "parameters": [
        {
          "name": "params",
          "type": "ArtistFetchParams",
          "optional": false
        },
        {
          "name": "db",
          "type": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/neon-http/driver\").NeonHttpDatabase<typeof s>",
          "optional": false
        }
      ],
      "returnType": "ArtistQueryBuilder",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "ArtistQueryBuilder",
          "params",
          "db"
        ]
      }
    },
    {
      "name": "NewEventArtistQueryBuilder",
      "filePath": "be/douren-backend/src/QueryBuilder/index.ts",
      "line": 142,
      "column": 1,
      "parameters": [
        {
          "name": "params",
          "type": "EventArtistFetchParams",
          "optional": false
        },
        {
          "name": "db",
          "type": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/neon-http/driver\").NeonHttpDatabase<typeof s>",
          "optional": false
        }
      ],
      "returnType": "EventArtistQueryBuilder",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "EventArtistQueryBuilder",
          "params",
          "db"
        ]
      }
    },
    {
      "name": "Fetch",
      "filePath": "be/douren-backend/src/Dao/Artist.ts",
      "line": 18,
      "column": 2,
      "parameters": [
        {
          "name": "params",
          "type": "ArtistFetchParams",
          "optional": false
        }
      ],
      "returnType": "Promise<{ data: { uuid: number; author: string | null; plurkLink: string | null; bahaLink: string | null; twitchLink: string | null; youtubeLink: string | null; twitterLink: string | null; facebookLink: string | null; instagramLink: string | null; pixivLink: string | null; tags: { tag: string; count: number; index: number; }[] | null; introduction: string | null; photo: string | null; myacgLink: string | null; storeLink: string | null; officialLink: string | null; }[]; totalCount: number; totalPage: number; nextPageAvailable: boolean; previousPageAvailable: boolean; pageSize: number; }>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "ArtistDao",
        "calledFunctions": [
          "NewArtistQueryBuilder",
          "BuildQuery",
          "all",
          "createPaginationObject",
          "Number"
        ],
        "usedVariables": [
          "QueryBuilder",
          "params",
          "SelectQuery",
          "CountQuery",
          "data",
          "counts",
          "returnObj",
          "PAGE_SIZE",
          "artistSchemaType"
        ]
      }
    },
    {
      "name": "Create",
      "filePath": "be/douren-backend/src/Dao/Artist.ts",
      "line": 33,
      "column": 2,
      "parameters": [
        {
          "name": "body",
          "type": "{ author: string; uuid?: number | undefined; plurkLink?: string | null | undefined; bahaLink?: string | null | undefined; twitchLink?: string | null | undefined; youtubeLink?: string | null | undefined; twitterLink?: string | null | undefined; facebookLink?: string | null | undefined; instagramLink?: string | null | undefined; pixivLink?: string | null | undefined; tags?: string | null | undefined; introduction?: string | null | undefined; photo?: string | null | undefined; myacgLink?: string | null | undefined; storeLink?: string | null | undefined; email?: string | null | undefined; officialLink?: string | null | undefined; }",
          "optional": false
        }
      ],
      "returnType": "Promise<Array<{ uuid: number; author: string; plurkLink: string | null; bahaLink: string | null; twitchLink: string | null; youtubeLink: string | null; twitterLink: string | null; facebookLink: string | null; instagramLink: string | null; pixivLink: string | null; tags: string | null; introduction: string | null; photo: string | null; myacgLink: string | null; storeLink: string | null; email: string | null; officialLink: string | null; }> | undefined>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "ArtistDao",
        "calledFunctions": [
          "returning",
          "onConflictDoUpdate",
          "values",
          "insert",
          "log"
        ],
        "usedVariables": [
          "data",
          "body",
          "target",
          "set",
          "e"
        ]
      }
    },
    {
      "name": "Update",
      "filePath": "be/douren-backend/src/Dao/Artist.ts",
      "line": 46,
      "column": 2,
      "parameters": [
        {
          "name": "artistId",
          "type": "string",
          "optional": false
        },
        {
          "name": "body",
          "type": "{ author: string; uuid?: number | undefined; plurkLink?: string | null | undefined; bahaLink?: string | null | undefined; twitchLink?: string | null | undefined; youtubeLink?: string | null | undefined; twitterLink?: string | null | undefined; facebookLink?: string | null | undefined; instagramLink?: string | null | undefined; pixivLink?: string | null | undefined; tags?: string | null | undefined; introduction?: string | null | undefined; photo?: string | null | undefined; myacgLink?: string | null | undefined; storeLink?: string | null | undefined; email?: string | null | undefined; officialLink?: string | null | undefined; }",
          "optional": false
        }
      ],
      "returnType": "Promise<Array<{ uuid: number; author: string; plurkLink: string | null; bahaLink: string | null; twitchLink: string | null; youtubeLink: string | null; twitterLink: string | null; facebookLink: string | null; instagramLink: string | null; pixivLink: string | null; tags: string | null; introduction: string | null; photo: string | null; myacgLink: string | null; storeLink: string | null; email: string | null; officialLink: string | null; }>>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "ArtistDao",
        "calledFunctions": [
          "returning",
          "where",
          "set",
          "update",
          "eq",
          "Number"
        ],
        "usedVariables": [
          "body",
          "artistId"
        ]
      }
    },
    {
      "name": "FetchById",
      "filePath": "be/douren-backend/src/Dao/Artist.ts",
      "line": 57,
      "column": 2,
      "parameters": [
        {
          "name": "artistId",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "Promise<{ uuid: number; author: string; plurkLink: string | null; bahaLink: string | null; twitchLink: string | null; youtubeLink: string | null; twitterLink: string | null; facebookLink: string | null; instagramLink: string | null; pixivLink: string | null; tags: string | null; introduction: string | null; photo: string | null; myacgLink: string | null; storeLink: string | null; email: string | null; officialLink: string | null; }>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "ArtistDao",
        "calledFunctions": [
          "where",
          "from",
          "select",
          "eq",
          "Number"
        ],
        "usedVariables": [
          "data",
          "artistId"
        ]
      }
    },
    {
      "name": "FetchArtistPageDetails",
      "filePath": "be/douren-backend/src/Dao/Artist.ts",
      "line": 65,
      "column": 2,
      "parameters": [
        {
          "name": "artistId",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "Promise<{ uuid: number; author: string; plurkLink: string | null; bahaLink: string | null; twitchLink: string | null; youtubeLink: string | null; twitterLink: string | null; facebookLink: string | null; instagramLink: string | null; pixivLink: string | null; tags: string | null; introduction: string | null; photo: string | null; myacgLink: string | null; storeLink: string | null; email: string | null; officialLink: string | null; products: Array<{ preview: string | null; thumbnail: string; title: string | null; }>; events: Array<{ locationDay01: string | null; locationDay02: string | null; locationDay03: string | null; boothName: string | null; dm: string | null; event: { name: string; } | null; }>; } | undefined>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "ArtistDao",
        "calledFunctions": [
          "findFirst",
          "eq",
          "Number"
        ],
        "usedVariables": [
          "data",
          "where",
          "artistId",
          "with",
          "products",
          "columns",
          "title",
          "thumbnail",
          "preview",
          "events"
        ]
      }
    },
    {
      "name": "Delete",
      "filePath": "be/douren-backend/src/Dao/Artist.ts",
      "line": 97,
      "column": 2,
      "parameters": [
        {
          "name": "artistId",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "Promise<Array<{ uuid: number; author: string; plurkLink: string | null; bahaLink: string | null; twitchLink: string | null; youtubeLink: string | null; twitterLink: string | null; facebookLink: string | null; instagramLink: string | null; pixivLink: string | null; tags: string | null; introduction: string | null; photo: string | null; myacgLink: string | null; storeLink: string | null; email: string | null; officialLink: string | null; }>>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "ArtistDao",
        "calledFunctions": [
          "returning",
          "where",
          "delete",
          "eq",
          "Number"
        ],
        "usedVariables": [
          "artistId"
        ]
      }
    },
    {
      "name": "NewArtistDao",
      "filePath": "be/douren-backend/src/Dao/Artist.ts",
      "line": 105,
      "column": 1,
      "parameters": [
        {
          "name": "db",
          "type": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/neon-http/driver\").NeonHttpDatabase<typeof s>",
          "optional": false
        }
      ],
      "returnType": "ArtistDao",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "ArtistDao",
          "db"
        ]
      }
    },
    {
      "name": "uuid",
      "filePath": "be/douren-backend/src/schema/event.zod.ts",
      "line": 6,
      "column": 8,
      "parameters": [
        {
          "name": "schema",
          "type": "{ uuid: z.ZodNumber; artistId: z.ZodNumber; locationDay01: z.ZodString; locationDay02: z.ZodString; locationDay03: z.ZodString; boothName: z.ZodString; dm: z.ZodString; eventId: z.ZodNumber; }",
          "optional": false
        }
      ],
      "returnType": "z.ZodOptional<z.ZodNumber>",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "optional"
        ],
        "usedVariables": []
      }
    },
    {
      "name": "id",
      "filePath": "be/douren-backend/src/schema/event.zod.ts",
      "line": 11,
      "column": 6,
      "parameters": [
        {
          "name": "schema",
          "type": "{ id: z.ZodNumber; name: z.ZodString; }",
          "optional": false
        }
      ],
      "returnType": "z.ZodOptional<z.ZodNumber>",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "optional"
        ],
        "usedVariables": []
      }
    },
    {
      "name": "Fetch",
      "filePath": "be/douren-backend/src/Dao/EventArtist.ts",
      "line": 19,
      "column": 2,
      "parameters": [
        {
          "name": "params",
          "type": "{ sort: string; page: string; searchTable: string; eventName: string; search?: string | undefined; tag?: string | undefined; }",
          "optional": false
        }
      ],
      "returnType": "Promise<{ data: { uuid: number; author: string | null; plurkLink: string | null; bahaLink: string | null; twitchLink: string | null; youtubeLink: string | null; twitterLink: string | null; facebookLink: string | null; instagramLink: string | null; pixivLink: string | null; tags: { tag: string; count: number; index: number; }[] | null; introduction: string | null; photo: string | null; myacgLink: string | null; storeLink: string | null; officialLink: string | null; locationDay01: string | null; locationDay02: string | null; locationDay03: string | null; boothName: string; DM: string | null; }[]; totalCount: number; totalPage: number; nextPageAvailable: boolean; previousPageAvailable: boolean; pageSize: number; }>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "EventArtistDao",
        "calledFunctions": [
          "NewEventArtistQueryBuilder",
          "BuildQuery",
          "all",
          "createPaginationObject",
          "Number"
        ],
        "usedVariables": [
          "QueryBuilder",
          "params",
          "SelectQuery",
          "CountQuery",
          "data",
          "counts",
          "returnObj",
          "PAGE_SIZE",
          "eventArtistSchemaType"
        ]
      }
    },
    {
      "name": "Create",
      "filePath": "be/douren-backend/src/Dao/EventArtist.ts",
      "line": 35,
      "column": 2,
      "parameters": [
        {
          "name": "body",
          "type": "{ artistId: number; uuid?: number | undefined; locationDay01?: string | null | undefined; locationDay02?: string | null | undefined; locationDay03?: string | null | undefined; boothName?: string | null | undefined; dm?: string | null | undefined; eventId?: number | null | undefined; }",
          "optional": false
        }
      ],
      "returnType": "Promise<Array<{ uuid: number; artistId: number; locationDay01: string | null; locationDay02: string | null; locationDay03: string | null; boothName: string | null; dm: string | null; eventId: number | null; }>>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "EventArtistDao",
        "calledFunctions": [
          "returning",
          "onConflictDoNothing",
          "values",
          "insert"
        ],
        "usedVariables": [
          "body",
          "PutEventArtistSchemaTypes",
          "target"
        ]
      }
    },
    {
      "name": "Update",
      "filePath": "be/douren-backend/src/Dao/EventArtist.ts",
      "line": 44,
      "column": 2,
      "parameters": [
        {
          "name": "eventArtistId",
          "type": "string",
          "optional": false
        },
        {
          "name": "body",
          "type": "{ artistId: number; uuid?: number | undefined; locationDay01?: string | null | undefined; locationDay02?: string | null | undefined; locationDay03?: string | null | undefined; boothName?: string | null | undefined; dm?: string | null | undefined; eventId?: number | null | undefined; }",
          "optional": false
        }
      ],
      "returnType": "Promise<Array<{ uuid: number; artistId: number; locationDay01: string | null; locationDay02: string | null; locationDay03: string | null; boothName: string | null; dm: string | null; eventId: number | null; }>>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "EventArtistDao",
        "calledFunctions": [
          "returning",
          "where",
          "set",
          "update",
          "eq",
          "Number"
        ],
        "usedVariables": [
          "body",
          "eventArtistId"
        ]
      }
    },
    {
      "name": "FetchById",
      "filePath": "be/douren-backend/src/Dao/EventArtist.ts",
      "line": 52,
      "column": 2,
      "parameters": [
        {
          "name": "eventArtistId",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "Promise<{ uuid: number; artistId: number; locationDay01: string | null; locationDay02: string | null; locationDay03: string | null; boothName: string | null; dm: string | null; eventId: number | null; }>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "EventArtistDao",
        "calledFunctions": [
          "where",
          "from",
          "select",
          "eq",
          "Number"
        ],
        "usedVariables": [
          "data",
          "eventArtistId"
        ]
      }
    },
    {
      "name": "Delete",
      "filePath": "be/douren-backend/src/Dao/EventArtist.ts",
      "line": 60,
      "column": 2,
      "parameters": [],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "EventArtistDao",
        "calledFunctions": [],
        "usedVariables": []
      }
    },
    {
      "name": "NewEventArtistDao",
      "filePath": "be/douren-backend/src/Dao/EventArtist.ts",
      "line": 63,
      "column": 1,
      "parameters": [
        {
          "name": "db",
          "type": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/neon-http/driver\").NeonHttpDatabase<typeof s>",
          "optional": false
        }
      ],
      "returnType": "EventArtistDao",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "EventArtistDao",
          "db"
        ]
      }
    },
    {
      "name": "FetchAll",
      "filePath": "be/douren-backend/src/Dao/Event.ts",
      "line": 12,
      "column": 2,
      "parameters": [],
      "returnType": "Promise<Array<{ id: number; name: string; }>>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "EventDao",
        "calledFunctions": [
          "orderBy",
          "from",
          "select",
          "desc"
        ],
        "usedVariables": []
      }
    },
    {
      "name": "FetchByEventName",
      "filePath": "be/douren-backend/src/Dao/Event.ts",
      "line": 16,
      "column": 2,
      "parameters": [
        {
          "name": "eventName",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "Promise<{ id: number; name: string; }>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "EventDao",
        "calledFunctions": [
          "where",
          "from",
          "select",
          "eq"
        ],
        "usedVariables": [
          "data",
          "eventName"
        ]
      }
    },
    {
      "name": "Create",
      "filePath": "be/douren-backend/src/Dao/Event.ts",
      "line": 24,
      "column": 2,
      "parameters": [
        {
          "name": "body",
          "type": "{ name: string; id?: number | undefined; }",
          "optional": false
        }
      ],
      "returnType": "Promise<Array<{ id: number; name: string; }>>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "EventDao",
        "calledFunctions": [
          "returning",
          "onConflictDoNothing",
          "values",
          "insert"
        ],
        "usedVariables": [
          "body",
          "target"
        ]
      }
    },
    {
      "name": "Update",
      "filePath": "be/douren-backend/src/Dao/Event.ts",
      "line": 32,
      "column": 2,
      "parameters": [],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "EventDao",
        "calledFunctions": [],
        "usedVariables": []
      }
    },
    {
      "name": "Delete",
      "filePath": "be/douren-backend/src/Dao/Event.ts",
      "line": 34,
      "column": 2,
      "parameters": [],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "EventDao",
        "calledFunctions": [],
        "usedVariables": []
      }
    },
    {
      "name": "NewEventDao",
      "filePath": "be/douren-backend/src/Dao/Event.ts",
      "line": 37,
      "column": 1,
      "parameters": [
        {
          "name": "db",
          "type": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/neon-http/driver\").NeonHttpDatabase<typeof s>",
          "optional": false
        }
      ],
      "returnType": "EventDao",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "EventDao",
          "db"
        ]
      }
    },
    {
      "name": "Fetch",
      "filePath": "be/douren-backend/src/Dao/Owner.ts",
      "line": 10,
      "column": 2,
      "parameters": [],
      "returnType": "Promise<Array<{ id: number; name: string; twitterLink: string | null; description: string | null; title: string | null; discordName: string | null; twitterName: string | null; githubName: string | null; githubLink: string | null; }>>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "OwnerDao",
        "calledFunctions": [
          "from",
          "select"
        ],
        "usedVariables": [
          "data"
        ]
      }
    },
    {
      "name": "NewOwnerDao",
      "filePath": "be/douren-backend/src/Dao/Owner.ts",
      "line": 16,
      "column": 28,
      "parameters": [
        {
          "name": "db",
          "type": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/neon-http/driver\").NeonHttpDatabase<typeof s>",
          "optional": false
        }
      ],
      "returnType": "OwnerDao",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "OwnerDao",
          "db"
        ]
      }
    },
    {
      "name": "syncAuthorTag",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/helper/migrate.ts",
      "line": 4,
      "column": 1,
      "parameters": [
        {
          "name": "db",
          "type": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/neon-http/driver\").NeonHttpDatabase<typeof s>",
          "optional": false
        }
      ],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "execute"
        ],
        "usedVariables": [
          "sql"
        ]
      }
    },
    {
      "name": "down",
      "filePath": "/home/stangen/code/Douren-Monorepo/be/douren-backend/src/helper/migrate.ts",
      "line": 74,
      "column": 1,
      "parameters": [
        {
          "name": "db",
          "type": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/neon-http/driver\").NeonHttpDatabase<typeof s>",
          "optional": false
        }
      ],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "execute"
        ],
        "usedVariables": [
          "sql"
        ]
      }
    },
    {
      "name": "fetchTag",
      "filePath": "be/douren-backend/src/Dao/Tag.ts",
      "line": 3,
      "column": 1,
      "parameters": [
        {
          "name": "db",
          "type": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/neon-http/driver\").NeonHttpDatabase<typeof s>",
          "optional": false
        }
      ],
      "returnType": "Promise<Array<{ tag: string; count: number | null; index: number; }>>",
      "isAsync": true,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "from",
          "select"
        ],
        "usedVariables": []
      }
    },
    {
      "name": "adminAuthMiddleware",
      "filePath": "be/douren-backend/src/index.ts",
      "line": 40,
      "column": 29,
      "parameters": [
        {
          "name": "c",
          "type": "Context<HonoEnv, any, {}>",
          "optional": false
        },
        {
          "name": "next",
          "type": "() => Promise<void>",
          "optional": false
        }
      ],
      "returnType": "Promise<(Response & import(\"/home/stangen/code/Douren-Monorepo/node_modules/hono/dist/types/types\").TypedResponse<{ message: string; }, 401, \"json\">) | undefined>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "verifyAdminUser",
          "json",
          "next"
        ],
        "usedVariables": [
          "verified",
          "c",
          "message"
        ]
      }
    },
    {
      "name": "imageAuthMiddleware",
      "filePath": "be/douren-backend/src/index.ts",
      "line": 54,
      "column": 29,
      "parameters": [
        {
          "name": "c",
          "type": "Context<HonoEnv, any, {}>",
          "optional": false
        },
        {
          "name": "next",
          "type": "() => Promise<void>",
          "optional": false
        }
      ],
      "returnType": "Promise<(Response & import(\"/home/stangen/code/Douren-Monorepo/node_modules/hono/dist/types/types\").TypedResponse<{ message: string; }, 401, \"json\">) | undefined>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "verifyImageUser",
          "json",
          "next"
        ],
        "usedVariables": [
          "verified",
          "c",
          "message"
        ]
      }
    },
    {
      "name": "createContext",
      "filePath": "be/douren-backend/src/index.ts",
      "line": 86,
      "column": 18,
      "parameters": [
        {
          "name": "_opts",
          "type": "{ req: Request; resHeaders: Headers; info: import(\"/home/stangen/code/Douren-Monorepo/node_modules/@trpc/server/dist/unstable-core-do-not-import\").TRPCRequestInfo; }",
          "optional": false
        },
        {
          "name": "c",
          "type": "Context<any, any, {}>",
          "optional": false
        }
      ],
      "returnType": "{ db: import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/neon-http/driver\").NeonHttpDatabase<typeof import(\"/home/stangen/code/Douren-Monorepo/pkg/database/src/db/schema\")>; honoContext: Context<any, any, {}>; }",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "log",
          "initDB"
        ],
        "usedVariables": [
          "db",
          "honoContext",
          "c"
        ]
      }
    },
    {
      "name": "scheduled",
      "filePath": "be/douren-backend/src/index.ts",
      "line": 104,
      "column": 2,
      "parameters": [
        {
          "name": "_event",
          "type": "ScheduledEvent",
          "optional": false
        },
        {
          "name": "env",
          "type": "ENV_BINDING",
          "optional": false
        },
        {
          "name": "ctx",
          "type": "ExecutionContext",
          "optional": false
        }
      ],
      "returnType": "void",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "leadingComments": [
          "/** this part manages cronjobs */"
        ],
        "calledFunctions": [
          "initDB",
          "syncAuthorTag",
          "log",
          "waitUntil",
          "delayedProcessing"
        ],
        "usedVariables": [
          "delayedProcessing",
          "db"
        ]
      }
    },
    {
      "name": "delayedProcessing",
      "filePath": "be/douren-backend/src/index.ts",
      "line": 105,
      "column": 29,
      "parameters": [],
      "returnType": "Promise<void>",
      "isAsync": true,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "parentFunction": "scheduled",
        "calledFunctions": [
          "initDB",
          "syncAuthorTag",
          "log"
        ],
        "usedVariables": [
          "db"
        ]
      }
    },
    {
      "name": "fetch",
      "filePath": "be/douren-backend/src/index.ts",
      "line": 112,
      "column": 2,
      "parameters": [
        {
          "name": "request",
          "type": "Request",
          "optional": false
        },
        {
          "name": "env",
          "type": "{ Bindings?: import(\"/home/stangen/code/Douren-Monorepo/node_modules/hono/dist/types/types\").Bindings; Variables?: import(\"/home/stangen/code/Douren-Monorepo/node_modules/hono/dist/types/types\").Variables; }",
          "optional": false
        },
        {
          "name": "ctx",
          "type": "ExecutionContext",
          "optional": false
        }
      ],
      "returnType": "Response | Promise<Response>",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "calledFunctions": [
          "fetch"
        ],
        "usedVariables": [
          "request",
          "env",
          "ctx"
        ]
      }
    },
    {
      "name": "Fetch",
      "filePath": "be/douren-backend/src/Dao/ProductArtist.ts",
      "line": 14,
      "column": 2,
      "parameters": [
        {
          "name": "_params",
          "type": "ProductArtist",
          "optional": false
        }
      ],
      "returnType": "Promise<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/pg-core/index\").PgSelectBuilder<undefined, \"db\">>",
      "isAsync": true,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "ProductArtistDao",
        "calledFunctions": [
          "select"
        ],
        "usedVariables": [
          "returnObj"
        ]
      }
    },
    {
      "name": "NewProductArtistDao",
      "filePath": "be/douren-backend/src/Dao/ProductArtist.ts",
      "line": 20,
      "column": 1,
      "parameters": [
        {
          "name": "db",
          "type": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/neon-http/driver\").NeonHttpDatabase<typeof import(\"/home/stangen/code/Douren-Monorepo/pkg/database/src/db/schema\")>",
          "optional": false
        }
      ],
      "returnType": "ProductArtistDao",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "ProductArtistDao",
          "db"
        ]
      }
    },
    {
      "name": "createMockDatabase",
      "filePath": "be/douren-backend/src/__fixtures__/mockDatabase.ts",
      "line": 6,
      "column": 35,
      "parameters": [],
      "returnType": "{ insert: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; update: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; delete: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; select: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; mockReturning: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; mockOnConflictDoNothing: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; mockValues: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; mockSet: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; mockWhere: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; }",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "mockResolvedValue",
          "fn",
          "mockReturnValue"
        ],
        "usedVariables": [
          "mockReturning",
          "mockArtistDbResponse",
          "mockOnConflictDoNothing",
          "returning",
          "mockValues",
          "onConflictDoNothing",
          "mockSet",
          "where",
          "mockWhere",
          "insert"
        ]
      }
    },
    {
      "name": "createMockQueryBuilder",
      "filePath": "be/douren-backend/src/__fixtures__/mockDatabase.ts",
      "line": 59,
      "column": 39,
      "parameters": [],
      "returnType": "{ BuildQuery: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; mockQuery: { data: string; }; }",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "mockReturnValue",
          "fn",
          "resolve"
        ],
        "usedVariables": [
          "mockQuery",
          "data",
          "BuildQuery",
          "SelectQuery",
          "query",
          "mockArtistDbResponse",
          "CountQuery",
          "totalCount"
        ]
      }
    },
    {
      "name": "createEventMockDatabase",
      "filePath": "be/douren-backend/src/__fixtures__/mockDatabase.ts",
      "line": 70,
      "column": 40,
      "parameters": [],
      "returnType": "{ select: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; insert: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; mockEventReturning: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; mockEventOnConflictDoNothing: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; mockEventValues: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; }",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "mockResolvedValue",
          "fn",
          "mockReturnValue"
        ],
        "usedVariables": [
          "mockEventReturning",
          "mockEventDbResponse",
          "mockEventOnConflictDoNothing",
          "returning",
          "mockEventValues",
          "onConflictDoNothing",
          "select",
          "from",
          "where",
          "singleEventDbResponse"
        ]
      }
    },
    {
      "name": "createEventArtistMockDatabase",
      "filePath": "be/douren-backend/src/__fixtures__/mockDatabase.ts",
      "line": 96,
      "column": 46,
      "parameters": [],
      "returnType": "{ insert: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; update: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; mockEventArtistReturning: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; mockEventArtistOnConflictDoNothing: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; mockEventArtistValues: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; mockEventArtistSet: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; }",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "mockResolvedValue",
          "fn",
          "mockReturnValue"
        ],
        "usedVariables": [
          "mockEventArtistReturning",
          "mockEventArtistDbResponse",
          "mockEventArtistOnConflictDoNothing",
          "returning",
          "mockEventArtistValues",
          "onConflictDoNothing",
          "mockEventArtistSet",
          "where",
          "insert",
          "values"
        ]
      }
    },
    {
      "name": "createEventArtistMockQueryBuilder",
      "filePath": "be/douren-backend/src/__fixtures__/mockDatabase.ts",
      "line": 127,
      "column": 50,
      "parameters": [],
      "returnType": "{ BuildQuery: import(\"/home/stangen/code/Douren-Monorepo/node_modules/vitest/dist/index\").Mock<(...args: any[]) => any>; }",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [
          "mockReturnValue",
          "fn",
          "resolve"
        ],
        "usedVariables": [
          "BuildQuery",
          "SelectQuery",
          "query",
          "mockEventArtistDbResponse",
          "CountQuery",
          "totalCount"
        ]
      }
    },
    {
      "name": "initDB",
      "filePath": "/home/stangen/code/Douren-Monorepo/pkg/database/src/db/initdb.ts",
      "line": 4,
      "column": 1,
      "parameters": [
        {
          "name": "url",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/neon-http/driver\").NeonHttpDatabase<typeof schema>",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "neon",
          "drizzle"
        ],
        "usedVariables": [
          "sql",
          "url",
          "db",
          "schema"
        ]
      }
    },
    {
      "name": "BuildQuery",
      "filePath": "pkg/database/src/index.ts",
      "line": 9,
      "column": 1,
      "parameters": [
        {
          "name": "query",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "SelectDatabaseQueryBuilder<T>",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "SelectDatabaseQueryBuilder",
          "query"
        ]
      }
    },
    {
      "name": "withFilterEventName",
      "filePath": "pkg/database/src/index.ts",
      "line": 18,
      "column": 3,
      "parameters": [
        {
          "name": "eventName",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "where",
          "eq"
        ],
        "usedVariables": [
          "eventName"
        ]
      }
    },
    {
      "name": "withOrderBy",
      "filePath": "pkg/database/src/index.ts",
      "line": 22,
      "column": 3,
      "parameters": [
        {
          "name": "sortBy",
          "type": "((column: AnyColumn | SQLWrapper) => SQL) | ((column: AnyColumn | SQLWrapper) => SQL)",
          "optional": false
        },
        {
          "name": "table",
          "type": "SQLWrapper | AnyColumn",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "orderBy",
          "sortBy"
        ],
        "usedVariables": [
          "table"
        ]
      }
    },
    {
      "name": "withPagination",
      "filePath": "pkg/database/src/index.ts",
      "line": 26,
      "column": 3,
      "parameters": [
        {
          "name": "page",
          "type": "number",
          "optional": false
        },
        {
          "name": "size",
          "type": "number",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "offset",
          "limit"
        ],
        "usedVariables": [
          "size",
          "page"
        ]
      }
    },
    {
      "name": "withIlikeSearchByTable",
      "filePath": "pkg/database/src/index.ts",
      "line": 30,
      "column": 3,
      "parameters": [
        {
          "name": "search",
          "type": "string",
          "optional": false
        },
        {
          "name": "table",
          "type": "Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnBaseConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column-builder\").ColumnDataType, string>, object, object>",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "where",
          "ilike"
        ],
        "usedVariables": [
          "table",
          "search"
        ]
      }
    },
    {
      "name": "withTableIsNotNull",
      "filePath": "pkg/database/src/index.ts",
      "line": 34,
      "column": 3,
      "parameters": [
        {
          "name": "table",
          "type": "Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnBaseConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column-builder\").ColumnDataType, string>, object, object>",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "where",
          "isNotNull"
        ],
        "usedVariables": [
          "table"
        ]
      }
    },
    {
      "name": "withTableIsNot",
      "filePath": "pkg/database/src/index.ts",
      "line": 38,
      "column": 3,
      "parameters": [
        {
          "name": "table",
          "type": "Column<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column\").ColumnBaseConfig<import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/column-builder\").ColumnDataType, string>, object, object>",
          "optional": false
        },
        {
          "name": "value",
          "type": "string | number",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "where",
          "not",
          "eq"
        ],
        "usedVariables": [
          "table",
          "value"
        ]
      }
    },
    {
      "name": "withAndFilter",
      "filePath": "pkg/database/src/index.ts",
      "line": 42,
      "column": 3,
      "parameters": [
        {
          "name": "filter",
          "type": "Array<SQLWrapper | undefined>",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "where",
          "and"
        ],
        "usedVariables": [
          "filter"
        ]
      }
    },
    {
      "name": "withFilter",
      "filePath": "pkg/database/src/index.ts",
      "line": 46,
      "column": 3,
      "parameters": [
        {
          "name": "filter",
          "type": "SQL<unknown>",
          "optional": false
        }
      ],
      "returnType": "this",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [
          "where"
        ],
        "usedVariables": [
          "filter"
        ]
      }
    },
    {
      "name": "Build",
      "filePath": "pkg/database/src/index.ts",
      "line": 50,
      "column": 3,
      "parameters": [],
      "returnType": "SelectDatabaseQueryBuilder<T>",
      "isAsync": false,
      "isExported": false,
      "kind": "method",
      "semanticContext": {
        "className": "SelectDatabaseQueryBuilder",
        "calledFunctions": [],
        "usedVariables": [
          "SelectDatabaseQueryBuilder"
        ]
      }
    },
    {
      "name": "initDB",
      "filePath": "/home/stangen/code/Douren-Monorepo/pkg/database/src/db/initdb.ts",
      "line": 4,
      "column": 1,
      "parameters": [
        {
          "name": "url",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/drizzle-orm/neon-http/driver\").NeonHttpDatabase<typeof schema>",
      "isAsync": false,
      "isExported": true,
      "kind": "function",
      "semanticContext": {
        "calledFunctions": [
          "neon",
          "drizzle"
        ],
        "usedVariables": [
          "sql",
          "url",
          "db",
          "schema"
        ]
      }
    },
    {
      "name": "ArtistPageProvider",
      "filePath": "/home/stangen/code/Douren-Monorepo/fe/Douren-frontend/src/routes/artist/$artistId/-context/ArtistPageContext/ArtistPageContext.tsx",
      "line": 11,
      "column": 35,
      "parameters": [
        {
          "name": "__0",
          "type": "{ children: ReactNode; data: ArtistPageTypes; }",
          "optional": false
        }
      ],
      "returnType": "import(\"/home/stangen/code/Douren-Monorepo/node_modules/@types/react/jsx-runtime\").JSX.Element",
      "isAsync": false,
      "isExported": false,
      "kind": "arrow",
      "semanticContext": {
        "calledFunctions": [],
        "usedVariables": [
          "value",
          "data",
          "children"
        ]
      }
    }
  ]
}