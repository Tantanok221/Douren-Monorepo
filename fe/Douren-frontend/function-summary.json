[
  {
    "name": "syncAuthorTag",
    "file": "../../be/douren-backend/src/helper/migrate.ts",
    "signature": "syncAuthorTag(db: any): Promise<void>"
  },
  {
    "name": "down",
    "file": "../../be/douren-backend/src/helper/migrate.ts",
    "signature": "down(db: any): Promise<void>"
  },
  {
    "name": "adminAuthMiddleware",
    "file": "../../be/douren-backend/src/index.ts",
    "signature": "adminAuthMiddleware(c: Context<HonoEnv, any, {}>, next: () => Promise<void>): Promise<JSONRespondReturn<{ message: string; }, 401> | undefined>"
  },
  {
    "name": "imageAuthMiddleware",
    "file": "../../be/douren-backend/src/index.ts",
    "signature": "imageAuthMiddleware(c: Context<HonoEnv, any, {}>, next: () => Promise<void>): Promise<JSONRespondReturn<{ message: string; }, 401> | undefined>"
  },
  {
    "name": "createContext",
    "file": "../../be/douren-backend/src/index.ts",
    "signature": "createContext(_opts: FetchCreateContextFnOptions, c: Context<any, any, {}>): { db: any; honoContext: Context<any, any, {}>; }"
  },
  {
    "name": "scheduled",
    "file": "../../be/douren-backend/src/index.ts",
    "signature": "scheduled(_event: ScheduledEvent, env: ENV_BINDING, ctx: ExecutionContext): void"
  },
  {
    "name": "delayedProcessing",
    "file": "../../be/douren-backend/src/index.ts",
    "signature": "delayedProcessing(): Promise<void>"
  },
  {
    "name": "fetch",
    "file": "../../be/douren-backend/src/index.ts",
    "signature": "fetch(request: Request, env: Env, ctx: ExecutionContext): Response | Promise<Response>"
  },
  {
    "name": "ArtistPageProvider",
    "file": "src/routes/artist/$artistId/-context/ArtistPageContext/ArtistPageContext.tsx",
    "signature": "ArtistPageProvider(__0: Props): Element"
  },
  {
    "name": "Navbar",
    "file": "src/routes/-components/Navbar.tsx",
    "signature": "Navbar(): Element"
  },
  {
    "name": "root",
    "file": "src/routes/__root.tsx",
    "signature": "root(): Element"
  },
  {
    "name": "component",
    "file": "src/routes/index.tsx",
    "signature": "component(): Element"
  },
  {
    "name": "Navigate",
    "file": "src/routes/index.tsx",
    "signature": "Navigate(): Element"
  },
  {
    "name": "ScrollToTop",
    "file": "src/components/ScrollToTop/ScrollToTop.tsx",
    "signature": "ScrollToTop(): Element"
  },
  {
    "name": "Animate",
    "file": "src/components/Animate/Animate.tsx",
    "signature": "Animate(OgComponent: FC<{}>): { (): Element; displayName: string; }"
  },
  {
    "name": "AnimatedComponent",
    "file": "src/components/Animate/Animate.tsx",
    "signature": "AnimatedComponent(): Element"
  },
  {
    "name": "useArtistLoader",
    "file": "src/hooks/useArtistLoader.ts",
    "signature": "useArtistLoader(id?: number | undefined): any"
  },
  {
    "name": "useFetchTagData",
    "file": "src/hooks/useFetchTagData.ts",
    "signature": "useFetchTagData(): any"
  },
  {
    "name": "Collection",
    "file": "src/routes/collection/index.tsx",
    "signature": "Collection(): Element"
  },
  {
    "name": "visible",
    "file": "src/helper/listAnimation.ts",
    "signature": "visible(index: number): { opacity: number; transition: { delay: number; }; }"
  },
  {
    "name": "processArtistData",
    "file": "src/helper/processArtistData.ts",
    "signature": "processArtistData(ArtistData: ArtistTypes): LinkResult[]"
  },
  {
    "name": "useProcessTagData",
    "file": "src/helper/useProcessTagData.ts",
    "signature": "useProcessTagData(allTag: string[]): TagObject[]"
  },
  {
    "name": "ArtistButton",
    "file": "src/routes/artist/-components/ArtistButton.tsx",
    "signature": "ArtistButton(__0: Props): Element"
  },
  {
    "name": "ArtistContainer",
    "file": "src/routes/artist/-components/ArtistContainer.tsx",
    "signature": "ArtistContainer(): Element | null"
  },
  {
    "name": "Artist",
    "file": "src/routes/artist/index.tsx",
    "signature": "Artist(): Element"
  },
  {
    "name": "EventContainer",
    "file": "src/routes/event/-components/EventContainer.tsx",
    "signature": "EventContainer(): Element | null"
  },
  {
    "name": "EventName",
    "file": "src/routes/event/$eventName.tsx",
    "signature": "EventName(): Element"
  },
  {
    "name": "useArtistPageContext",
    "file": "src/routes/artist/$artistId/-context/ArtistPageContext/useArtistPageContext.ts",
    "signature": "useArtistPageContext(): ArtistPageTypes"
  },
  {
    "name": "ArtistPage",
    "file": "src/routes/artist/$artistId/index.tsx",
    "signature": "ArtistPage(): Element | null"
  }
]