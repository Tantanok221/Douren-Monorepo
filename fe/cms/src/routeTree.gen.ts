/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as NewIndexImport } from './routes/new/index'
import { Route as EditArtistIdIndexImport } from './routes/edit.$artistId/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NewIndexRoute = NewIndexImport.update({
  id: '/new/',
  path: '/new/',
  getParentRoute: () => rootRoute,
} as any)

const EditArtistIdIndexRoute = EditArtistIdIndexImport.update({
  id: '/edit/$artistId/',
  path: '/edit/$artistId/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/new/': {
      id: '/new/'
      path: '/new'
      fullPath: '/new'
      preLoaderRoute: typeof NewIndexImport
      parentRoute: typeof rootRoute
    }
    '/edit/$artistId/': {
      id: '/edit/$artistId/'
      path: '/edit/$artistId'
      fullPath: '/edit/$artistId'
      preLoaderRoute: typeof EditArtistIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/new': typeof NewIndexRoute
  '/edit/$artistId': typeof EditArtistIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/new': typeof NewIndexRoute
  '/edit/$artistId': typeof EditArtistIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/new/': typeof NewIndexRoute
  '/edit/$artistId/': typeof EditArtistIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/new' | '/edit/$artistId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/new' | '/edit/$artistId'
  id: '__root__' | '/' | '/new/' | '/edit/$artistId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NewIndexRoute: typeof NewIndexRoute
  EditArtistIdIndexRoute: typeof EditArtistIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NewIndexRoute: NewIndexRoute,
  EditArtistIdIndexRoute: EditArtistIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/new/",
        "/edit/$artistId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/new/": {
      "filePath": "new/index.tsx"
    },
    "/edit/$artistId/": {
      "filePath": "edit.$artistId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
