/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as FormImport } from './routes/form'
import { Route as IndexImport } from './routes/index'
import { Route as FormProductImport } from './routes/form/product'
import { Route as FormEventartistImport } from './routes/form/eventartist'
import { Route as FormArtistImport } from './routes/form/artist'

// Create/Update Routes

const FormRoute = FormImport.update({
  id: '/form',
  path: '/form',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const FormProductRoute = FormProductImport.update({
  id: '/product',
  path: '/product',
  getParentRoute: () => FormRoute,
} as any)

const FormEventartistRoute = FormEventartistImport.update({
  id: '/eventartist',
  path: '/eventartist',
  getParentRoute: () => FormRoute,
} as any)

const FormArtistRoute = FormArtistImport.update({
  id: '/artist',
  path: '/artist',
  getParentRoute: () => FormRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/form': {
      id: '/form'
      path: '/form'
      fullPath: '/form'
      preLoaderRoute: typeof FormImport
      parentRoute: typeof rootRoute
    }
    '/form/artist': {
      id: '/form/artist'
      path: '/artist'
      fullPath: '/form/artist'
      preLoaderRoute: typeof FormArtistImport
      parentRoute: typeof FormImport
    }
    '/form/eventartist': {
      id: '/form/eventartist'
      path: '/eventartist'
      fullPath: '/form/eventartist'
      preLoaderRoute: typeof FormEventartistImport
      parentRoute: typeof FormImport
    }
    '/form/product': {
      id: '/form/product'
      path: '/product'
      fullPath: '/form/product'
      preLoaderRoute: typeof FormProductImport
      parentRoute: typeof FormImport
    }
  }
}

// Create and export the route tree

interface FormRouteChildren {
  FormArtistRoute: typeof FormArtistRoute
  FormEventartistRoute: typeof FormEventartistRoute
  FormProductRoute: typeof FormProductRoute
}

const FormRouteChildren: FormRouteChildren = {
  FormArtistRoute: FormArtistRoute,
  FormEventartistRoute: FormEventartistRoute,
  FormProductRoute: FormProductRoute,
}

const FormRouteWithChildren = FormRoute._addFileChildren(FormRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/form': typeof FormRouteWithChildren
  '/form/artist': typeof FormArtistRoute
  '/form/eventartist': typeof FormEventartistRoute
  '/form/product': typeof FormProductRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/form': typeof FormRouteWithChildren
  '/form/artist': typeof FormArtistRoute
  '/form/eventartist': typeof FormEventartistRoute
  '/form/product': typeof FormProductRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/form': typeof FormRouteWithChildren
  '/form/artist': typeof FormArtistRoute
  '/form/eventartist': typeof FormEventartistRoute
  '/form/product': typeof FormProductRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/form'
    | '/form/artist'
    | '/form/eventartist'
    | '/form/product'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/form' | '/form/artist' | '/form/eventartist' | '/form/product'
  id:
    | '__root__'
    | '/'
    | '/form'
    | '/form/artist'
    | '/form/eventartist'
    | '/form/product'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FormRoute: typeof FormRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FormRoute: FormRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/form"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/form": {
      "filePath": "form.tsx",
      "children": [
        "/form/artist",
        "/form/eventartist",
        "/form/product"
      ]
    },
    "/form/artist": {
      "filePath": "form/artist.tsx",
      "parent": "/form"
    },
    "/form/eventartist": {
      "filePath": "form/eventartist.tsx",
      "parent": "/form"
    },
    "/form/product": {
      "filePath": "form/product.tsx",
      "parent": "/form"
    }
  }
}
ROUTE_MANIFEST_END */
