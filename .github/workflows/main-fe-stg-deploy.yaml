name: Douren Frontend Staging Deployment

on:
  pull_request:
    branches:
      - main
    paths:
      - 'fe/douren-frontend/**'
      - 'pkg/type'
      - "lib/ui/**"
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_FE_PROJECT_ID }}

jobs:
  fe-stg-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    name: Staging Deploy
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_REMOTE_ONLY: true
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Install dependencies
        run: npm install

      - name: Get Env Variable
        env:
          dotenv: ${{secrets.DOTENV_ME}}
        run: npx dotenv-vault pull staging --dotenvMe=$dotenv -y && mv .env.staging .env &&make copy-env

      - name: Build Packages
        run: npm run pkg

      - name: Build Library
        run: npm run lib

      - name: Build Douren Backend
        run: npm run be

      - name: Deploy Frontend on staging
        env:
          token: ${{secrets.TURBO_TOKEN}}
        run: |
          cd fe/Douren-frontend
          WRANGLER_VARS=""
             while IFS= read -r line || [[ -n "$line" ]]; do
             # Ignore comments, empty lines, and the DEV_ENV variable
             if [[ ! $line =~ ^\s*# ]] && [[ -n "$line" ]] && [[ ! $line =~ ^DEV_ENV= ]]; then
             # Split the line on the first '=' to handle complex values correctly
             key=$(echo "$line" | cut -d '=' -f 1 | xargs)
             value=$(echo "$line" | cut -d '=' -f 2- | xargs)

            # Properly escape any special characters in the value
              quoted_value=$(printf '%q' "$value")

            # Append the key-value pair to WRANGLER_VARS
              WRANGLER_VARS+="--env ${key}=${quoted_value} "
              fi
              done < .env
          
          echo "Debug: WRANGLER_VARS=$WRANGLER_VARS"  
          vercel pull --yes --token=$token
          vercel link --repo --yes --token=$token
          vercel build --yes --token=$token
          vercel deploy $WRANGLER_VARS --prebuild --token=$token