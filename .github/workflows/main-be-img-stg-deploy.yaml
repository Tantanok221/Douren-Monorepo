name: Douren Image Backend Deploy Pipeline

on:
  pull_request:
    paths:
      - 'be/douren-image-api/**'
      - 'pkg/**'

jobs:
  be-img-stg-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    name: Image Backend Staging Deploy
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_REMOTE_ONLY: true
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Get Env Variable
        env:
          dotenv: ${{secrets.DOTENV_ME}}
        run: npx dotenv-vault pull staging --dotenvMe=$dotenv -y && mv .env.staging .env &&make copy-env

      - name: Build Packages
        run: npm run pkg

      - name: Build Library
        run: npm run lib

      - name: Run Test Cases
        run: npm run test

      - name: Deploy Backend Image
        env:
          CF_ACCOUNT_ID: ${{secrets.CLOUDFLARE_ACCOUNT_ID}}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_KEY }}
        run: |
          cd be/douren-image-api
          WRANGLER_VARS=""
              while IFS= read -r line || [[ -n "$line" ]]; do
              # Ignore comments, empty lines, and the DEV_ENV variable
              if [[ ! $line =~ ^\s*# ]] && [[ -n "$line" ]] && [[ ! $line =~ ^DEV_ENV= ]]; then
              # Split the line on the first '=' to handle complex values correctly
              key=$(echo "$line" | cut -d '=' -f 1 | xargs)
              value=$(echo "$line" | cut -d '=' -f 2- | xargs)

            # Properly escape any special characters in the value
              quoted_value=$(printf '%q' "$value")

            # Append the key-value pair to WRANGLER_VARS
              WRANGLER_VARS+="--var ${key}=${quoted_value} "
              fi
              done < .env

          echo "Debug: WRANGLER_VARS=$WRANGLER_VARS" 
          npm run deploy -- $WRANGLER_VARS --env staging
